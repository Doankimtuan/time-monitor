{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "//api.discover.getmoni.io"
    }
  ],
  "paths": {
    "/api/v3/analytics/charts/mindshare/projects/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "userId": {
                            "type": "string",
                            "description": "Internal ID of the account in [x.com](https://x.com/)",
                            "example": "1026753750038470658"
                          },
                          "projectTags": {
                            "type": "array",
                            "description": "Tags associated with the account, manually assigned by moderators",
                            "example": [
                              {
                                "slug": "other",
                                "name": "Other"
                              }
                            ],
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "example": "Alpha Hunter"
                                },
                                "logoUrl": {
                                  "type": "string",
                                  "format": "url"
                                }
                              },
                              "required": [
                                "logoUrl",
                                "name"
                              ]
                            }
                          },
                          "value": {
                            "type": "number",
                            "format": "float",
                            "example": 50.4,
                            "description": "The value in percent. It represents the ratio of smart mentions for this account to the total number of smart mentions."
                          },
                          "change": {
                            "type": "number",
                            "format": "float",
                            "example": -12.5,
                            "description": "Represents the ratio of the current mindshare to the mindshare from the previous identical timeframe."
                          }
                        },
                        "required": [
                          "change",
                          "projectTags",
                          "userId",
                          "value"
                        ]
                      }
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "forAccountProjectChains",
            "required": false,
            "x-nullable": true,
            "description": "Chains listed comma-separated slugs from `/api/v3/basics/project_chains/`. It will return mindshare only for projects with the specified chains.",
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "in": "query",
            "name": "forAccountProjectTags",
            "required": false,
            "x-nullable": true,
            "description": "Tags listed comma-separated slugs from `/api/v3/basics/project_categories/`. It will return mindshare only from projects with the specified tags.",
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": true,
            "description": "Maximum number of items to return in a single request",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 20
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": true,
            "description": "The starting index of the first project to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "timeframe",
            "required": false,
            "description": "The timeframe for which to show changes in values.",
            "schema": {
              "type": "string",
              "enum": [
                "H1",
                "H24",
                "D7",
                "D30",
                "D90",
                "D180",
                "Y1"
              ],
              "default": "H24"
            }
          },
          {
            "in": "query",
            "name": "fromSmartAccountsTagCategories",
            "required": false,
            "x-nullable": true,
            "description": "Smart tag categories listed comma-separated slugs from `/api/v3/basics/smart_tag_categories/`. It will return mindshare calculated only from the specified smart categories.",
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "in": "query",
            "name": "forAccounts",
            "required": false,
            "x-nullable": true,
            "description": "Account handles to get mindshare for. It will return mindshare according to the specified parameters, but the mindshare for the given accounts will be added at the beginning of the list.",
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ðŸ”¥ Mindshare"
        ],
        "summary": "Projects Mindshare",
        "description": "\n**Description**: Provides project mindshare analytics.\n\n\n\n**Usage**: Use this endpoint to understand which projects are most discussed by smarts within the selected timeframe.\n\n\nUse `api/v3/basics/project_categories/` to get all available project categories\nUse `api/v3/basics/project_chains/` to get all available project chains.\nUse `api/v3/basics/smart_tag_categories/` to get all available smart tag categories.\n\n\n\n**Usage Cost**: 1 point per project + 50 points per project in the forAccounts parameter\n\n\n**Timeframe**: The time range for the returned data. Possible values:\n- `H1` - Last 1 hour\n\n- `H24` - Last 24 hours\n\n- `D7` - Last 7 days\n\n- `D30` - Last 30 days\n\n- `D90` - Last 90 days\n\n- `D180` - Last 180 days\n\n- `Y1` - Last 1 year"
      }
    },
    "/api/v3/analytics/charts/mindshare/categories/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the category",
                            "example": "AI"
                          },
                          "logoUrl": {
                            "type": "string",
                            "format": "url",
                            "description": "Link to the categoryâ€™s logo",
                            "example": "https://storage.googleapis.com/moni-twitter-bot/statics/images/project_tag_logo/ai.png"
                          },
                          "value": {
                            "type": "number",
                            "format": "float",
                            "example": 50.4,
                            "description": "The value in percent. It represents the ratio of smart mentions for this category to the total number of smart mentions."
                          },
                          "change": {
                            "type": "number",
                            "format": "float",
                            "example": -12.5,
                            "description": "Represents the ratio of the current mindshare to the mindshare from the previous identical timeframe."
                          }
                        },
                        "required": [
                          "change",
                          "logoUrl",
                          "name",
                          "value"
                        ]
                      }
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "forAccountProjectChains",
            "required": false,
            "x-nullable": true,
            "description": "Chains listed comma-separated slugs from `/api/v3/basics/project_chains/`. It will return mindshare only for projects with the specified chains.",
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": true,
            "description": "Maximum number of items to return in a single request",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 20
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": true,
            "description": "The starting index of the first project to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "timeframe",
            "required": false,
            "description": "The timeframe for which to show changes in values.",
            "schema": {
              "type": "string",
              "enum": [
                "H1",
                "H24",
                "D7",
                "D30",
                "D90",
                "D180",
                "Y1"
              ],
              "default": "H24"
            }
          },
          {
            "in": "query",
            "name": "fromSmartAccountsTagCategories",
            "required": false,
            "x-nullable": true,
            "description": "Smart tag categories listed comma-separated slugs from `/api/v3/basics/smart_tag_categories/`. It will return mindshare calculated only from the specified smart categories.",
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ðŸ”¥ Mindshare"
        ],
        "summary": "Category Mindshare",
        "description": "\n**Description**: Provides category mindshare analytics.\n\n\n\n**Usage**: Use this endpoint to understand which narratives are most discussed by smart money within the selected timeframe.\n\n\nUse `api/v3/basics/project_categories/` to get all available project categories\nUse `api/v3/basics/project_chains/` to get all available project chains.\nUse `api/v3/basics/smart_tag_categories/` to get all available smart tag categories.\n\n\n\n**Usage Cost**: 1 points per category\n\n\n**Timeframe**: The time range for the returned data. Possible values:\n- `H1` - Last 1 hour\n\n- `H24` - Last 24 hours\n\n- `D7` - Last 7 days\n\n- `D30` - Last 30 days\n\n- `D90` - Last 90 days\n\n- `D180` - Last 180 days\n\n- `Y1` - Last 1 year"
      }
    },
    "/api/v3/analytics/charts/mindshare/chains/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the category",
                            "example": "AI"
                          },
                          "logoUrl": {
                            "type": "string",
                            "format": "url",
                            "description": "Link to the categoryâ€™s logo",
                            "example": "https://storage.googleapis.com/moni-twitter-bot/statics/images/project_tag_logo/ai.png"
                          },
                          "value": {
                            "type": "number",
                            "format": "float",
                            "example": 50.4,
                            "description": "The value in percent. It represents the ratio of smart mentions for this category to the total number of smart mentions."
                          },
                          "change": {
                            "type": "number",
                            "format": "float",
                            "example": -12.5,
                            "description": "Represents the ratio of the current mindshare to the mindshare from the previous identical timeframe."
                          }
                        },
                        "required": [
                          "change",
                          "logoUrl",
                          "name",
                          "value"
                        ]
                      }
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "forAccountProjectTags",
            "required": false,
            "x-nullable": true,
            "description": "Tags listed comma-separated slugs from `/api/v3/basics/project_categories/`. It will return mindshare only from projects with the specified tags.",
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": true,
            "description": "Maximum number of items to return in a single request",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 20
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": true,
            "description": "The starting index of the first project to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "in": "query",
            "name": "timeframe",
            "required": false,
            "description": "The timeframe for which to show changes in values.",
            "schema": {
              "type": "string",
              "enum": [
                "H1",
                "H24",
                "D7",
                "D30",
                "D90",
                "D180",
                "Y1"
              ],
              "default": "H24"
            }
          },
          {
            "in": "query",
            "name": "fromSmartAccountsTagCategories",
            "required": false,
            "x-nullable": true,
            "description": "Smart tag categories listed comma-separated slugs from `/api/v3/basics/smart_tag_categories/`. It will return mindshare calculated only from the specified smart categories.",
            "schema": {
              "type": "string",
              "default": null
            }
          },
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ðŸ”¥ Mindshare"
        ],
        "summary": "Chains Mindshare",
        "description": "\n**Description**: Provides chain mindshare analytics.\n\n\n\n**Usage**: Use this endpoint to understand which chains are most discussed by smart money within the selected timeframe.\n\n\nUse `api/v3/basics/project_categories/` to get all available project categories\nUse `api/v3/basics/project_chains/` to get all available project chains.\nUse `api/v3/basics/smart_tag_categories/` to get all available smart tag categories.\n\n\n\n**Usage Cost**: 1 points per chain\n\n\n**Timeframe**: The time range for the returned data. Possible values:\n- `H1` - Last 1 hour\n\n- `H24` - Last 24 hours\n\n- `D7` - Last 7 days\n\n- `D30` - Last 30 days\n\n- `D90` - Last 90 days\n\n- `D180` - Last 180 days\n\n- `Y1` - Last 1 year"
      }
    },
    "/api/v3/basics/project_categories/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "slug": {
                            "type": "string",
                            "example": "ai"
                          },
                          "name": {
                            "type": "string",
                            "example": "AI"
                          }
                        },
                        "required": [
                          "name",
                          "slug"
                        ]
                      }
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Mindshare Essentials"
        ],
        "summary": "Categories for Mindshare",
        "description": "\n**Description**: Provides all available project categories\n\n\n\n**Usage**: Use this endpoint to get the full list of project categories.\n\n\n\n**Usage Cost**: 0 point"
      }
    },
    "/api/v3/basics/project_chains/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "slug": {
                            "type": "string",
                            "example": "ethereum"
                          },
                          "name": {
                            "type": "string",
                            "example": "Ethereum"
                          }
                        },
                        "required": [
                          "name",
                          "slug"
                        ]
                      }
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Mindshare Essentials"
        ],
        "summary": "Chains for Mindshare",
        "description": "\n**Description**: Provides all available project chains\n\n\n\n**Usage**: Use this endpoint to get the full list of chains.\n\n\n\n**Usage Cost**: 0 point"
      }
    },
    "/api/v3/basics/smart_tag_categories/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "slug": {
                            "type": "string",
                            "example": "influencers"
                          },
                          "name": {
                            "type": "string",
                            "example": "Influencers"
                          }
                        },
                        "required": [
                          "name",
                          "slug"
                        ]
                      }
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Mindshare Essentials"
        ],
        "summary": "Smarts for Mindshare",
        "description": "\n**Description**: Provides all available smart tag categories\n\n\n\n**Usage**: Use this endpoint to get the full list of smart categories.\n\n\n\n**Usage Cost**: 0 point"
      }
    },
    "/api/v3/accounts/{username}/info/full/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "string",
                          "description": "Internal ID of the account in [x.com](https://x.com/)",
                          "example": "1026753750038470658"
                        },
                        "userUrl": {
                          "type": "string",
                          "description": "URL of the account in [x.com](https://x.com/)",
                          "example": "https://x.com/elonmusk"
                        }
                      },
                      "required": [
                        "userId",
                        "userUrl"
                      ]
                    },
                    "smartEngagement": {
                      "type": "object",
                      "properties": {
                        "smartsCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of smarts of the account in [x.com](https://x.com/)",
                          "example": 494
                        },
                        "moniScore": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Account score based on its smarts in [x.com](https://x.com/)",
                          "example": 3718
                        },
                        "mentionsCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Total number of mentions of the account in [x.com](https://x.com/)",
                          "example": 2779
                        },
                        "smartMentionsCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of mentions by \"smart\" accounts in [x.com](https://x.com/)",
                          "example": 1761
                        }
                      },
                      "required": [
                        "mentionsCount",
                        "moniScore",
                        "smartMentionsCount",
                        "smartsCount"
                      ]
                    },
                    "smartProfile": {
                      "type": "object",
                      "properties": {
                        "smartTier": {
                          "description": "Tier of the smarts",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "tier": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Tiers range from 1 (highest) to 3 (lowest)",
                                  "example": 1
                                },
                                "logoUrl": {
                                  "type": "string",
                                  "example": "https://storage.googleapis.com/moni-twitter-bot/statics/images/score_1.png"
                                }
                              }
                            }
                          ]
                        },
                        "smartTags": {
                          "type": "array",
                          "description": "List of tags manually assigned by moderators",
                          "items": {
                            "type": "object",
                            "properties": {
                              "slug": {
                                "type": "string",
                                "example": "alpha-hunter"
                              },
                              "name": {
                                "type": "string",
                                "example": "Alpha Hunter"
                              },
                              "totalCount": {
                                "type": "integer",
                                "format": "int32",
                                "example": 3
                              }
                            },
                            "required": [
                              "name",
                              "slug",
                              "totalCount"
                            ]
                          }
                        },
                        "smartTagCategories": {
                          "type": "array",
                          "description": "List of tag categories manually assigned by moderators",
                          "example": [
                            {
                              "slug": "vc/fund-team",
                              "name": "VC/Fund team"
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "slug": {
                                "type": "string",
                                "example": "alpha-hunter"
                              },
                              "name": {
                                "type": "string",
                                "example": "Alpha Hunter"
                              },
                              "totalCount": {
                                "type": "integer",
                                "format": "int32",
                                "example": 3
                              }
                            },
                            "required": [
                              "name",
                              "slug",
                              "totalCount"
                            ]
                          }
                        },
                        "projectTags": {
                          "type": "array",
                          "description": "Tags associated with the account, manually assigned by moderators",
                          "example": [
                            {
                              "slug": "other",
                              "name": "Other"
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "slug": {
                                "type": "string",
                                "example": "alpha-hunter"
                              },
                              "name": {
                                "type": "string",
                                "example": "Alpha Hunter"
                              },
                              "totalCount": {
                                "type": "integer",
                                "format": "int32",
                                "example": 3
                              }
                            },
                            "required": [
                              "name",
                              "slug",
                              "totalCount"
                            ]
                          }
                        },
                        "chains": {
                          "type": "array",
                          "description": "Blockchain networks the account is associated with",
                          "items": {
                            "type": "object",
                            "properties": {
                              "slug": {
                                "type": "string",
                                "example": "ethereum"
                              },
                              "name": {
                                "type": "string",
                                "example": "Ethereum"
                              }
                            },
                            "required": [
                              "name",
                              "slug"
                            ]
                          }
                        },
                        "bioChangesCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Indicates the number of times the user's bio has been changed."
                        }
                      },
                      "required": [
                        "bioChangesCount"
                      ]
                    }
                  },
                  "required": [
                    "meta",
                    "smartEngagement",
                    "smartProfile"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "required": true,
            "description": "The username (handle) of the user in x.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Account Info"
        ],
        "summary": "Full Account Info",
        "description": "\n**Description**: Retrieves **detailed insights** about a specific account using its username.\n\nThe response includes:\n\n  -  **Profile metadata** â€“ ID.\n\n  -  **Engagement metrics** â€“ smarts count, tweet count, mentions.\n\n  -  **Advanced analytics** â€“ number of Smarts, Smart Mentions and **Moni score**.\n\n  -  **Blockchain & category tagging** â€“ identifies the accountâ€™s connection to specific blockchains and assigns tags from algorithm or manual classification by moderators & tiers **(tier from 1 to 3)** smart is tagged and assigned by algorithm & moderators\n\nUse this endpoint to analyze **influencers, projects, and community engagement** in Web3.\n\n\n\n**Usage**: Use to extract full information of any specific account including Moni Score & Social Analytics. Get deep insights into any specific account.\n\n\n\n**Usage Cost**: 8 points per request\n    "
      }
    },
    "/api/v3/accounts/{username}/info/meta/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "string",
                          "description": "Internal ID of the account in [x.com](https://x.com/)",
                          "example": "1026753750038470658"
                        },
                        "userUrl": {
                          "type": "string",
                          "description": "URL of the account in [x.com](https://x.com/)",
                          "example": "https://x.com/elonmusk"
                        }
                      },
                      "required": [
                        "userId",
                        "userUrl"
                      ]
                    }
                  },
                  "required": [
                    "meta"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "required": true,
            "description": "The username (handle) of the user in x.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Account Info"
        ],
        "summary": "Account Metadata (ID)",
        "description": "\n**Description**: Retrieves **basic profile data** of a specific account using its username.\n\nThe response includes:\n\n  -  **Profile details** â€“ ID.\n\nThis endpoint provides **only account ID** without advanced social analytics.\n\n\n\n**Usage**: Use to fetch account ID.\n\n\n\n**Usage Cost**: 1 points per request\n    "
      }
    },
    "/api/v3/accounts/{username}/info/smart_profile/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "smartProfile": {
                      "type": "object",
                      "properties": {
                        "smartTier": {
                          "description": "Tier of the smarts",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "tier": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Tiers range from 1 (highest) to 3 (lowest)",
                                  "example": 1
                                },
                                "logoUrl": {
                                  "type": "string",
                                  "example": "https://storage.googleapis.com/moni-twitter-bot/statics/images/score_1.png"
                                }
                              }
                            }
                          ]
                        },
                        "smartTags": {
                          "type": "array",
                          "description": "List of tags manually assigned by moderators",
                          "items": {
                            "type": "object",
                            "properties": {
                              "slug": {
                                "type": "string",
                                "example": "alpha-hunter"
                              },
                              "name": {
                                "type": "string",
                                "example": "Alpha Hunter"
                              },
                              "totalCount": {
                                "type": "integer",
                                "format": "int32",
                                "example": 3
                              }
                            },
                            "required": [
                              "name",
                              "slug",
                              "totalCount"
                            ]
                          }
                        },
                        "smartTagCategories": {
                          "type": "array",
                          "description": "List of tag categories manually assigned by moderators",
                          "example": [
                            {
                              "slug": "vc/fund-team",
                              "name": "VC/Fund team"
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "slug": {
                                "type": "string",
                                "example": "alpha-hunter"
                              },
                              "name": {
                                "type": "string",
                                "example": "Alpha Hunter"
                              },
                              "totalCount": {
                                "type": "integer",
                                "format": "int32",
                                "example": 3
                              }
                            },
                            "required": [
                              "name",
                              "slug",
                              "totalCount"
                            ]
                          }
                        },
                        "projectTags": {
                          "type": "array",
                          "description": "Tags associated with the account, manually assigned by moderators",
                          "example": [
                            {
                              "slug": "other",
                              "name": "Other"
                            }
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "slug": {
                                "type": "string",
                                "example": "alpha-hunter"
                              },
                              "name": {
                                "type": "string",
                                "example": "Alpha Hunter"
                              },
                              "totalCount": {
                                "type": "integer",
                                "format": "int32",
                                "example": 3
                              }
                            },
                            "required": [
                              "name",
                              "slug",
                              "totalCount"
                            ]
                          }
                        },
                        "chains": {
                          "type": "array",
                          "description": "Blockchain networks the account is associated with",
                          "items": {
                            "type": "object",
                            "properties": {
                              "slug": {
                                "type": "string",
                                "example": "ethereum"
                              },
                              "name": {
                                "type": "string",
                                "example": "Ethereum"
                              }
                            },
                            "required": [
                              "name",
                              "slug"
                            ]
                          }
                        },
                        "bioChangesCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Indicates the number of times the user's bio has been changed."
                        }
                      },
                      "required": [
                        "bioChangesCount"
                      ]
                    }
                  },
                  "required": [
                    "smartProfile"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "required": true,
            "description": "The username (handle) of the user in x.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Account Info"
        ],
        "summary": "Account Smart Profile",
        "description": "\n**Description**: Retrieves only **advanced insights** about a specific account, including:\n\n -  **Smart profile analysis** â€“ internal ranking called **Smart Tier** of account influence.\n\n -  **Categorization & tags** â€“ labels assigned algorithmically or manually from our moderators.\n\n -  **Blockchain affiliation** â€“ blockchains associated with the account.\n\n -  **Profile history** â€“ number of bio updates as a signal of behavioral patterns.\n\n**Smart Tier** - is a rank assigned by Moni internal algorithm. There are three tiers based on the \"smart\" account's rating tiers:\n\n1 - ðŸ§ \n\n2 - ðŸ§ ðŸ§ \n\n3 - ðŸ§ ðŸ§ ðŸ§ \n\nThe higher the tier, the greater the account's influence on its audience.\n\n\n\n**Usage**: Use to access an accountâ€™s influence & smart audience presence, detect blockchain-linked accounts in the crypto space, categorize profiles based on moderator-assigned tags & tiers.\n\n\n\n**Usage Cost**: 2 points per request\n    "
      }
    },
    "/api/v3/accounts/{username}/info/smart_engagement/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "smartEngagement": {
                      "type": "object",
                      "properties": {
                        "smartsCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of smarts of the account in [x.com](https://x.com/)",
                          "example": 494
                        },
                        "moniScore": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Account score based on its smarts in [x.com](https://x.com/)",
                          "example": 3718
                        },
                        "mentionsCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Total number of mentions of the account in [x.com](https://x.com/)",
                          "example": 2779
                        },
                        "smartMentionsCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Number of mentions by \"smart\" accounts in [x.com](https://x.com/)",
                          "example": 1761
                        }
                      },
                      "required": [
                        "mentionsCount",
                        "moniScore",
                        "smartMentionsCount",
                        "smartsCount"
                      ]
                    }
                  },
                  "required": [
                    "smartEngagement"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "required": true,
            "description": "The username (handle) of the user in x.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Account Info"
        ],
        "summary": "Account Smart Engagement",
        "description": "\n**Description**: Retrieves **only advanced engagement analytics** for a specific account, including:\n\n  -  **Smarts count** â€“ how many smarts interacted with this account.\n\n  -  **Moni score** â€“ our internal account score calculated based on smarts.\n\n  -  **Total mentions** â€“ number of times the account was mentioned.\n\n  -  **Smart mentions** â€“ how often it's mentioned by \"smart\" accounts.\n\n\n\n**Usage**: Use this endpoint to analyze an accountâ€™s impact, influence, and reach within the smart Web3 community. Identify influential Web3 accounts based on smart audience, measure real engagement vs. bot activity. \n\n\n\n**Usage Cost**: 5 points per request\n    "
      }
    },
    "/api/v3/accounts/{username}/history/smarts_count/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chart": {
                      "type": "array",
                      "description": "List of [Timestamp (UNIX) representing the date, Historical value on this date]",
                      "example": [
                        [
                          1594713600,
                          9219
                        ],
                        [
                          1594713900,
                          9218
                        ]
                      ],
                      "items": {}
                    },
                    "timeframeChange": {
                      "type": "number",
                      "format": "float",
                      "description": "Change in value over the specified timeframe"
                    },
                    "sinceFoundChange": {
                      "type": "number",
                      "format": "float",
                      "description": "Change in value since the account was first identified"
                    },
                    "sinceFound": {
                      "type": "number",
                      "format": "float",
                      "description": "Value at the time the account was first discovered"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "timeframe",
            "required": false,
            "description": "Timeframe",
            "schema": {
              "type": "string",
              "enum": [
                "H1",
                "H24",
                "D7",
                "D30",
                "D90",
                "D180",
                "Y1"
              ],
              "default": "H24"
            }
          },
          {
            "in": "path",
            "name": "username",
            "required": true,
            "description": "The username (handle) of the user in x.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "History"
        ],
        "summary": "Smarts History",
        "description": "\n**Description**: Provides **historical data** on the number of **smarts** (manually curated by moderators) associated/interacted with a specific account.\n\n  -  **Graph-ready data** â€“ structured for **date vs. smarts count** visualization.\n\n  -  **Smart change tracking** â€“ see new additions & removals over time.\n\n  -  **Custom timeframes** â€“ query by last **1H, 24H, 7D, 30D, 90D, 180D, or 1Y**.\n\n\n\n**Usage**: Use this endpoint to analyze long or short-term smarts attention growth trends & dynamics. Build historical charts of smarts. Identify growth spikes & declines over time. Compare smart trends across different timeframes.\n\n\n\n**Usage Cost**: 4 points per request\n\n\n**Timeframe**: The time range for the returned data. Possible values:\n- `H1` - Last 1 hour\n\n- `H24` - Last 24 hours\n\n- `D7` - Last 7 days\n\n- `D30` - Last 30 days\n\n- `D90` - Last 90 days\n\n- `D180` - Last 180 days\n\n- `Y1` - Last 1 year"
      }
    },
    "/api/v3/accounts/{username}/history/mentions_count/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chart": {
                      "type": "array",
                      "description": "List of [Timestamp (UNIX) representing the date, Historical value on this date]",
                      "example": [
                        [
                          1594713600,
                          9219
                        ],
                        [
                          1594713900,
                          9218
                        ]
                      ],
                      "items": {}
                    },
                    "timeframeChange": {
                      "type": "number",
                      "format": "float",
                      "description": "Change in value over the specified timeframe"
                    },
                    "sinceFoundChange": {
                      "type": "number",
                      "format": "float",
                      "description": "Change in value since the account was first identified"
                    },
                    "sinceFound": {
                      "type": "number",
                      "format": "float",
                      "description": "Value at the time the account was first discovered"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "timeframe",
            "required": false,
            "description": "Timeframe",
            "schema": {
              "type": "string",
              "enum": [
                "H1",
                "H24",
                "D7",
                "D30",
                "D90",
                "D180",
                "Y1"
              ],
              "default": "H24"
            }
          },
          {
            "in": "path",
            "name": "username",
            "required": true,
            "description": "The username (handle) of the user in x.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "History"
        ],
        "summary": "Mentions History",
        "description": "\n**Description**: Provides **historical data** on the **total number of mentions** for a specific account.\n\n  -  **Graph-ready data** â€“ structured for **date vs. mention count** visualization.\n\n  -  **Change tracking** â€“ see how mention frequency evolves over time.\n\n  -  **Custom timeframes** â€“ query by last **1H, 24H, 7D, 30D, 90D, 180D, or 1Y**.\n\n\n\n**Usage**: Use this endpoint to analyze audience engagement trends and detect spikes in attention. Build historical mention charts for tracking engagement. Identify sudden spikes in visibility (viral moments, controversy, promotions). Compare mentions of trends across different timeframes.\n\n\n\n**Usage Cost**: 2 points per request\n\n\n**Timeframe**: The time range for the returned data. Possible values:\n- `H1` - Last 1 hour\n\n- `H24` - Last 24 hours\n\n- `D7` - Last 7 days\n\n- `D30` - Last 30 days\n\n- `D90` - Last 90 days\n\n- `D180` - Last 180 days\n\n- `Y1` - Last 1 year"
      }
    },
    "/api/v3/accounts/{username}/history/smart_mentions_count/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chart": {
                      "type": "array",
                      "description": "List of [Timestamp (UNIX) representing the date, Historical value on this date]",
                      "example": [
                        [
                          1594713600,
                          9219
                        ],
                        [
                          1594713900,
                          9218
                        ]
                      ],
                      "items": {}
                    },
                    "timeframeChange": {
                      "type": "number",
                      "format": "float",
                      "description": "Change in value over the specified timeframe"
                    },
                    "sinceFoundChange": {
                      "type": "number",
                      "format": "float",
                      "description": "Change in value since the account was first identified"
                    },
                    "sinceFound": {
                      "type": "number",
                      "format": "float",
                      "description": "Value at the time the account was first discovered"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "timeframe",
            "required": false,
            "description": "Timeframe",
            "schema": {
              "type": "string",
              "enum": [
                "H1",
                "H24",
                "D7",
                "D30",
                "D90",
                "D180",
                "Y1"
              ],
              "default": "H24"
            }
          },
          {
            "in": "path",
            "name": "username",
            "required": true,
            "description": "The username (handle) of the user in x.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "History"
        ],
        "summary": "Smart Mentions History",
        "description": "\n**Description**: Provides **historical data** on the number of **Smart Mentions** for a specific account. These mentions come from **\"smart\" accounts**, manually curated by moderators.\n\n  -  **Graph-ready data** â€“ structured for **date vs. mention** count visualization.\n\n  -  **Smart mentions tracking** â€“ see how often key accounts reference this profile.\n\n  -  **Custom timeframes** â€“ query by last **1H, 24H, 7D, 30D, 90D, 180D, or 1Y**.\n\n\n\n**Usage**: Use this endpoint to analyze engagement from influential users and track shifts in relevance within the smart audience. Monitor mentions from high-value, curated accounts. Identify spikes in attention from smart users. Compare smart mentions across different timeframes.\n\n\n\n**Usage Cost**: 4 points per request\n\n\n**Timeframe**: The time range for the returned data. Possible values:\n- `H1` - Last 1 hour\n\n- `H24` - Last 24 hours\n\n- `D7` - Last 7 days\n\n- `D30` - Last 30 days\n\n- `D90` - Last 90 days\n\n- `D180` - Last 180 days\n\n- `Y1` - Last 1 year"
      }
    },
    "/api/v3/accounts/{username}/smarts/full/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "description": "The list of Smarts",
                      "items": {
                        "type": "object",
                        "properties": {
                          "meta": {
                            "type": "object",
                            "properties": {
                              "userId": {
                                "type": "number",
                                "description": "Internal ID of the account on [x.com](http://x.com/)",
                                "example": "14379660"
                              },
                              "userUrl": {
                                "type": "string",
                                "description": "URL of the account in [x.com](https://x.com/)",
                                "example": "https://x.com/elonmusk"
                              }
                            },
                            "required": [
                              "userUrl"
                            ]
                          },
                          "smartEngagement": {
                            "type": "object",
                            "properties": {
                              "interactedAt": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Date and time the smart was added",
                                "example": 1708135452
                              },
                              "moniScore": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Account score based on its smarts in [x.com](https://x.com/)",
                                "example": 25147
                              },
                              "mentionsCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Total number of mentions of the account on [x.com](http://x.com/)",
                                "example": 6313
                              },
                              "smartMentionsCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Total number of mentions from \"smart\" accounts on [x.com](http://x.com/)",
                                "example": 4744
                              },
                              "smartsCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Number of smarts of the account on [x.com](http://x.com/)",
                                "example": 2396
                              }
                            },
                            "required": [
                              "mentionsCount",
                              "moniScore",
                              "smartMentionsCount",
                              "smartsCount"
                            ]
                          },
                          "smartProfile": {
                            "type": "object",
                            "properties": {
                              "smartTier": {
                                "description": "Tier of the smart",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "tier": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "Tiers range from 1 (highest) to 3 (lowest)",
                                        "example": 1
                                      },
                                      "logoUrl": {
                                        "type": "string",
                                        "example": "https://storage.googleapis.com/moni-twitter-bot/statics/images/score_1.png"
                                      }
                                    }
                                  }
                                ]
                              },
                              "smartTags": {
                                "type": "array",
                                "description": "List of tags manually assigned by moderators",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "slug": {
                                      "type": "string",
                                      "example": "influencer"
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "Influencer"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "slug"
                                  ]
                                }
                              },
                              "smartTagCategories": {
                                "type": "array",
                                "description": "List of tag categories manually assigned by moderators",
                                "example": [
                                  {
                                    "slug": "vc/fund-team",
                                    "name": "VC/Fund team"
                                  }
                                ],
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "slug": {
                                      "type": "string",
                                      "example": "influencer"
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "Influencer"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "slug"
                                  ]
                                }
                              },
                              "projectTags": {
                                "type": "array",
                                "description": "Tags associated with the account, manually assigned by moderators",
                                "example": [
                                  {
                                    "slug": "other",
                                    "name": "Other"
                                  }
                                ],
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "slug": {
                                      "type": "string",
                                      "example": "influencer"
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "Influencer"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "slug"
                                  ]
                                }
                              },
                              "chains": {
                                "type": "array",
                                "description": "Blockchain networks the account is associated with",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "slug": {
                                      "type": "string",
                                      "example": "ethereum"
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "Ethereum"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "slug"
                                  ]
                                }
                              },
                              "bioChangesCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Indicates the number of times the user's bio has been changed."
                              }
                            },
                            "required": [
                              "bioChangesCount"
                            ]
                          }
                        },
                        "required": [
                          "meta",
                          "smartEngagement",
                          "smartProfile"
                        ]
                      }
                    },
                    "totalCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The total number of Smarts"
                    }
                  },
                  "required": [
                    "items",
                    "totalCount"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Maximum number of items to return in a single request",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "description": "The starting index of the first smarts to return",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "required": false,
            "description": "Determines the sorting criteria for smarts. Supported values: `CREATED_AT` Sort by the date the smart was added; `SCORE` Sort by the moni score on discover.getmoni.io.; `FOLLOWERS_COUNT` Sort by the total number of followers. `SMARTS_COUNT` Sort by the number of smarts.",
            "schema": {
              "type": "string",
              "enum": [
                "CREATED_AT",
                "SCORE",
                "FOLLOWERS_COUNT",
                "SMARTS_COUNT"
              ],
              "default": "CREATED_AT"
            }
          },
          {
            "in": "query",
            "name": "orderByDirection",
            "required": false,
            "description": "Sorting direction for orderBy. Supported values: `DESC` means descending order; `ASC` means ascending order",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "default": "DESC"
            }
          },
          {
            "in": "query",
            "name": "categories",
            "required": false,
            "description": "Filters \"smart\" by the specified categories. Categories should be provided as a comma-separated list. A full list of available categories can be retrieved via `/api/v3/accounts/{username}/smarts/categories/`",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "path",
            "name": "username",
            "required": true,
            "description": "The username (handle) of the user in x.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Smarts"
        ],
        "summary": "Smarts Full Info",
        "description": "\n**Description**: Retrieves the complete list of smarts for a given specific account, providing detailed information about each smart.\n\n  -  **Advanced analytics** â€“ number of Smarts, Smart Mentions and **Moni score**.\n\n  -  **Blockchain & category tagging** â€“ identifies the accountâ€™s connection to specific blockchains and assigns tags from algorithm or manual classification by moderators & tiers **(tier from 1 to 3)** smart is tagged and assigned by algorithm & moderators.\n\n \n\n Order results by **interaction date, moni score or smarts count, category**. The endpoint has **limits** â€“ up to **100 Smarts in the list per request**.\n\n\n\n**Usage**: Use endpoint to retrieve detailed analytics on an accountâ€™s smarts. Filter & sort smarts based on influence and engagement. Build custom leaderboards & audience segmentation.\n\n\n\n**Usage Cost**: 5 points per request\n    "
      }
    },
    "/api/v3/accounts/{username}/smarts/meta/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "description": "The list of Smarts",
                      "items": {
                        "type": "object",
                        "properties": {
                          "meta": {
                            "type": "object",
                            "properties": {
                              "userId": {
                                "type": "number",
                                "description": "Internal ID of the account on [x.com](http://x.com/)",
                                "example": "14379660"
                              },
                              "userUrl": {
                                "type": "string",
                                "description": "URL of the account in [x.com](https://x.com/)",
                                "example": "https://x.com/elonmusk"
                              }
                            },
                            "required": [
                              "userUrl"
                            ]
                          }
                        },
                        "required": [
                          "meta"
                        ]
                      }
                    },
                    "totalCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The total number of Smarts"
                    }
                  },
                  "required": [
                    "items",
                    "totalCount"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Maximum number of items to return in a single request",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "description": "The starting index of the first smarts to return",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "required": false,
            "description": "Determines the sorting criteria for smarts. Supported values: `CREATED_AT` Sort by the date the smart was added; `SCORE` Sort by the moni score on discover.getmoni.io.; `FOLLOWERS_COUNT` Sort by the total number of followers. `SMARTS_COUNT` Sort by the number of smarts.",
            "schema": {
              "type": "string",
              "enum": [
                "CREATED_AT",
                "SCORE",
                "FOLLOWERS_COUNT",
                "SMARTS_COUNT"
              ],
              "default": "CREATED_AT"
            }
          },
          {
            "in": "query",
            "name": "orderByDirection",
            "required": false,
            "description": "Sorting direction for orderBy. Supported values: `DESC` means descending order; `ASC` means ascending order",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "default": "DESC"
            }
          },
          {
            "in": "query",
            "name": "categories",
            "required": false,
            "description": "Filters \"smart\" by the specified categories. Categories should be provided as a comma-separated list. A full list of available categories can be retrieved via `/api/v3/accounts/{username}/smarts/categories/`",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "path",
            "name": "username",
            "required": true,
            "description": "The username (handle) of the user in x.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Smarts"
        ],
        "summary": "Smarts Metadata (ID)",
        "description": "\n**Description**: Retrieves **a list of all smarts** for a given specific account, providing only basic profile data:\n\n  -  **Profile details** â€“ ID.\n\n\n\nOrder results by **interaction date, moni score or smarts count, category**. The endpoint has **limits** â€“ up to **100 Smarts in the list per request**.\n\n\n\n**Usage**: Use to fetch a simple list of smarts with key profile details. Filter & sort smarts by relevance, growth, or influence. Use for quick lookups and bulk audience processing. \n\n\n\n**Usage Cost**: 1 point per request\n    "
      }
    },
    "/api/v3/accounts/{username}/smarts/smart_profile/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "description": "The list of Smarts",
                      "items": {
                        "type": "object",
                        "properties": {
                          "smartProfile": {
                            "type": "object",
                            "properties": {
                              "smartTier": {
                                "description": "Tier of the smart",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "tier": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "Tiers range from 1 (highest) to 3 (lowest)",
                                        "example": 1
                                      },
                                      "logoUrl": {
                                        "type": "string",
                                        "example": "https://storage.googleapis.com/moni-twitter-bot/statics/images/score_1.png"
                                      }
                                    }
                                  }
                                ]
                              },
                              "smartTags": {
                                "type": "array",
                                "description": "List of tags manually assigned by moderators",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "slug": {
                                      "type": "string",
                                      "example": "influencer"
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "Influencer"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "slug"
                                  ]
                                }
                              },
                              "smartTagCategories": {
                                "type": "array",
                                "description": "List of tag categories manually assigned by moderators",
                                "example": [
                                  {
                                    "slug": "vc/fund-team",
                                    "name": "VC/Fund team"
                                  }
                                ],
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "slug": {
                                      "type": "string",
                                      "example": "influencer"
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "Influencer"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "slug"
                                  ]
                                }
                              },
                              "projectTags": {
                                "type": "array",
                                "description": "Tags associated with the account, manually assigned by moderators",
                                "example": [
                                  {
                                    "slug": "other",
                                    "name": "Other"
                                  }
                                ],
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "slug": {
                                      "type": "string",
                                      "example": "influencer"
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "Influencer"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "slug"
                                  ]
                                }
                              },
                              "chains": {
                                "type": "array",
                                "description": "Blockchain networks the account is associated with",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "slug": {
                                      "type": "string",
                                      "example": "ethereum"
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "Ethereum"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "slug"
                                  ]
                                }
                              },
                              "bioChangesCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Indicates the number of times the user's bio has been changed."
                              }
                            },
                            "required": [
                              "bioChangesCount"
                            ]
                          }
                        },
                        "required": [
                          "smartProfile"
                        ]
                      }
                    },
                    "totalCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The total number of Smarts"
                    }
                  },
                  "required": [
                    "items",
                    "totalCount"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Maximum number of items to return in a single request",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "description": "The starting index of the first smarts to return",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "required": false,
            "description": "Determines the sorting criteria for smarts. Supported values: `CREATED_AT` Sort by the date the smart was added; `SCORE` Sort by the moni score on discover.getmoni.io.; `FOLLOWERS_COUNT` Sort by the total number of followers. `SMARTS_COUNT` Sort by the number of smarts.",
            "schema": {
              "type": "string",
              "enum": [
                "CREATED_AT",
                "SCORE",
                "FOLLOWERS_COUNT",
                "SMARTS_COUNT"
              ],
              "default": "CREATED_AT"
            }
          },
          {
            "in": "query",
            "name": "orderByDirection",
            "required": false,
            "description": "Sorting direction for orderBy. Supported values: `DESC` means descending order; `ASC` means ascending order",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "default": "DESC"
            }
          },
          {
            "in": "query",
            "name": "categories",
            "required": false,
            "description": "Filters \"smart\" by the specified categories. Categories should be provided as a comma-separated list. A full list of available categories can be retrieved via `/api/v3/accounts/{username}/smarts/categories/`",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "path",
            "name": "username",
            "required": true,
            "description": "The username (handle) of the user in x.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Smarts"
        ],
        "summary": "Smarts Smart Profile",
        "description": "\n**Description**: Retrieves **a list of all Smarts** for a given specific account, focusing on **tier classification and tagging**.\n\n -  **Smart profile analysis** â€“ internal ranking called **Smart Tier** of account influence.\n\n -  **Categorization & tags** â€“ labels assigned algorithmically or manually from our moderators.\n\n -  **Blockchain affiliation** â€“ blockchains associated with the account.\n\n -  **Profile history** â€“ number of bio updates as a signal of behavioral patterns.\n\n**Smart Tier** - is a rank assigned by Moni internal algorithm. There are three tiers based on the \"smart\" account's rating tiers:\n\n1 - ðŸ§ \n\n2 - ðŸ§ ðŸ§ \n\n3 - ðŸ§ ðŸ§ ðŸ§ \n\nThe higher the tier, the greater the account's influence on its audience.\n\n\n\nOrder results by **interaction date, moni score or smarts count, category**. The endpoint has **limits** â€“ up to **100 Smarts in the list per request**.\n\n\n\n**Usage**: This endpoint is ideal for segmenting smarts based on influence and niche. Retrieve tiered lists of smarts for influence analysis. Filter & sort smart by tags, score, and engagement level. Use for audience segmentation and targeted outreach.\n\n\n\n**Usage Cost**: 1 point per request\n    "
      }
    },
    "/api/v3/accounts/{username}/smarts/smart_engagement/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "description": "The list of Smarts",
                      "items": {
                        "type": "object",
                        "properties": {
                          "smartEngagement": {
                            "type": "object",
                            "properties": {
                              "interactedAt": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Date and time the smart was added",
                                "example": 1708135452
                              },
                              "moniScore": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Account score based on its smarts in [x.com](https://x.com/)",
                                "example": 25147
                              },
                              "mentionsCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Total number of mentions of the account on [x.com](http://x.com/)",
                                "example": 6313
                              },
                              "smartMentionsCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Total number of mentions from \"smart\" accounts on [x.com](http://x.com/)",
                                "example": 4744
                              },
                              "smartsCount": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Number of smarts of the account on [x.com](http://x.com/)",
                                "example": 2396
                              }
                            },
                            "required": [
                              "mentionsCount",
                              "moniScore",
                              "smartMentionsCount",
                              "smartsCount"
                            ]
                          }
                        },
                        "required": [
                          "smartEngagement"
                        ]
                      }
                    },
                    "totalCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The total number of Smarts"
                    }
                  },
                  "required": [
                    "items",
                    "totalCount"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Maximum number of items to return in a single request",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "description": "The starting index of the first smarts to return",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "in": "query",
            "name": "orderBy",
            "required": false,
            "description": "Determines the sorting criteria for smarts. Supported values: `CREATED_AT` Sort by the date the smart was added; `SCORE` Sort by the moni score on discover.getmoni.io.; `FOLLOWERS_COUNT` Sort by the total number of followers. `SMARTS_COUNT` Sort by the number of smarts.",
            "schema": {
              "type": "string",
              "enum": [
                "CREATED_AT",
                "SCORE",
                "FOLLOWERS_COUNT",
                "SMARTS_COUNT"
              ],
              "default": "CREATED_AT"
            }
          },
          {
            "in": "query",
            "name": "orderByDirection",
            "required": false,
            "description": "Sorting direction for orderBy. Supported values: `DESC` means descending order; `ASC` means ascending order",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "default": "DESC"
            }
          },
          {
            "in": "query",
            "name": "categories",
            "required": false,
            "description": "Filters \"smart\" by the specified categories. Categories should be provided as a comma-separated list. A full list of available categories can be retrieved via `/api/v3/accounts/{username}/smarts/categories/`",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "in": "path",
            "name": "username",
            "required": true,
            "description": "The username (handle) of the user in x.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Smarts"
        ],
        "summary": "Smarts Engagement",
        "description": "\n**Description**: Retrieves **a list of all Smarts** for a given specific account, focusing on **engagement and influence metrics of Smarts such as**:\n\n  -  **Smarts count** â€“ how many \"smart\" users interacted with this account.\n\n  -  **Moni score** â€“ our internal account score calculated based on smarts.\n\n  -  **Total mentions** â€“ number of times the account was mentioned.\n\n  -  **Smart mentions** â€“ how often it's mentioned by \"smart\" accounts.\n\n\n\nOrder results by **interaction date, moni score, or category**. The endpoint has **limits** â€“ up to **100 Smarts in the list per request**. This endpoint is useful for **analyzing the activity, relevance, and network strength of an account**.\n\n\n\n**Usage**: This endpoint is useful for analyzing the activity, relevance, and network strength of an account. Use it to Identify highly engaged accounts based on their own smart mentions &  smarts network. Use for targeted influencer analysis & outreach.\n\n\n\n**Usage Cost**: 3 points per request\n    "
      }
    },
    "/api/v3/accounts/{username}/smarts/distribution/level/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "description": "The list of Smart Followers levels",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "level": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "itemsCount": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "required": true,
            "description": "The username (handle) of the user in x.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Smarts"
        ],
        "summary": "Smarts Tiers",
        "description": "\n**Description**: Returns information about the tier distribution of Smarts for a specific account. A \"smart\" account tier represents its level of influence on generating attention toward a project, as determined by Moni's internal algorithm.\n\nThere are three tiers based on the \"smart\" account's rating:\n\n1 - ðŸ§ \n\n2 - ðŸ§ ðŸ§ \n\n3 - ðŸ§ ðŸ§ ðŸ§ \n\nThe higher the tier, the greater the account's influence on its audience.\n\n\n\n**Usage**: Use it to analyze the distribution of Tier 1, 2, and 3 smarts. Compare tier distribution across multiple accounts. Observe changes in high-tier smarts over time. Identify accounts with a strong base of high-tier smarts.\n\n\n\n**Usage Cost**: 1 point per request\n    "
      }
    },
    "/api/v3/accounts/{username}/smarts/categories/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "description": "The list of Smarts categories",
                      "items": {
                        "type": "object",
                        "properties": {
                          "slug": {
                            "type": "string",
                            "description": "Slug of the category"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the category"
                          },
                          "itemsCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of smarts in this category"
                          }
                        },
                        "required": [
                          "itemsCount",
                          "name",
                          "slug"
                        ]
                      }
                    },
                    "totalCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The total number of Smarts categories"
                    }
                  },
                  "required": [
                    "items",
                    "totalCount"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "required": true,
            "description": "The username (handle) of the user in x.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Smarts"
        ],
        "summary": "Smarts Categories",
        "description": "\n**Description**: Retrieves a list of categories associated with the smarts of a given specific account, including the smarts count for each category.\n\n\n\n**Usage**: Use this endpoint to see which categories dominate an accountâ€™s smarts, Identify if an account has more smarts in some specific category, benchmark category distribution across multiple accounts.\n\n\n\n**Usage Cost**: 1 point per request\n    "
      }
    },
    "/api/v3/accounts/{username}/feed/events/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "example": [
                        {
                          "createdAt": 1742128258,
                          "type": "NEW_BIO",
                          "data": {}
                        }
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "createdAt": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The date the event was created",
                            "example": 1737729427
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "NEW_BIO",
                              "NEW_FOLLOWING",
                              "NEW_FOLLOWING_BY_SMART",
                              "NEW_UNFOLLOWING_BY_SMART",
                              "NEW_MAJOR_EVENT"
                            ]
                          },
                          "data": {}
                        },
                        "required": [
                          "createdAt",
                          "data",
                          "type"
                        ]
                      }
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "fromDate",
            "required": false,
            "x-nullable": true,
            "description": "Unixtimestamp of the earliest event to include.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "in": "query",
            "name": "toDate",
            "required": false,
            "x-nullable": true,
            "description": "Unixtimestamp of the most recent event to include.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "The maximum number of items to return",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          },
          {
            "in": "path",
            "name": "username",
            "required": true,
            "description": "The username (handle) of the user in x.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Feed & Events"
        ],
        "summary": "Event List",
        "description": "\n**Description**: Retrieves **a list of major events** related to a specific account, tracking key changes in its activity such as: \n\n -  **Bio updates** â€“ name, description, or handle changes (`NEW_BIO`).\n\n -  **Major events** â€“ significant activities detected by Moni Discover (`NEW_MAJOR_EVENT`)\n\nYou can **filter events by type and date range**, as well as **sort them by time or event category**. The endpoint has **limits** â€“ up to **100 events in the list per request**.\n\n\n\n**Usage**: This endpoint provides a timeline of key account updates, useful for tracking activity trends and engagement shifts. Monitor profile updates & major activity changes in real-time. Analyze historical events to detect good or bad behavioral patterns.\n\n\n\n**Usage Cost**: 3 points per request\n    "
      }
    },
    "/api/v3/accounts/{username}/feed/smart_mentions/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "createdAt": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The date the event was created",
                            "example": 1737729427
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "NEW_MENTION"
                            ],
                            "example": "NEW_MENTION"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "mentionBy": {
                                "type": "object",
                                "properties": {
                                  "userId": {
                                    "type": "string"
                                  },
                                  "userUrl": {
                                    "type": "string"
                                  },
                                  "moniScore": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "smartsCount": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "slug": {
                                          "type": "string",
                                          "example": "influencer"
                                        },
                                        "name": {
                                          "type": "string",
                                          "example": "Influencer"
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "slug"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "userId",
                                  "userUrl"
                                ]
                              },
                              "postUrl": {
                                "type": "string",
                                "example": "https://x.com/elonmusk/status/1900638690252136809"
                              },
                              "postId": {
                                "type": "string",
                                "example": "1900638690252136809"
                              }
                            },
                            "required": [
                              "mentionBy",
                              "postId",
                              "postUrl"
                            ]
                          }
                        },
                        "required": [
                          "createdAt",
                          "data",
                          "type"
                        ]
                      }
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "fromDate",
            "required": false,
            "x-nullable": true,
            "description": "Unixtimestamp of the earliest event to include.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "in": "query",
            "name": "toDate",
            "required": false,
            "x-nullable": true,
            "description": "Unixtimestamp of the most recent event to include.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": null
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "The maximum number of items to return",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          },
          {
            "in": "path",
            "name": "username",
            "required": true,
            "description": "The username (handle) of the user in x.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Feed & Events"
        ],
        "summary": "Smart Mentions Feed",
        "description": "\n**Description**: Retrieves **a list of tweets mentioning a given account**, but **only from smarts**.This endpoint helps analyze how high-quality Web3 participants interact with an account and track narrative shifts among smart audiences. Filter tweets by date range. The endpoint has **limits** â€“ up to **100 tweets in the list per request**.\n\n\n\n**Usage**: Use to Monitor how smarts mention your account, Identify key influencers talking about a project.\n\n\n\n**Usage Cost**: 4 points per request\n    "
      }
    },
    "/api/v3/accounts/{username}/feed/tweets/full/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "engagement": {
                                "description": "The tweet engagement",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "postScore": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "The post score",
                                        "example": 91.6
                                      }
                                    },
                                    "required": [
                                      "postScore"
                                    ]
                                  }
                                ]
                              },
                              "meta": {
                                "description": "The tweet meta",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "postId": {
                                        "type": "number",
                                        "description": "Indicates the unique identifier of the tweet",
                                        "example": "1901917025385005306"
                                      }
                                    },
                                    "required": [
                                      "postId"
                                    ]
                                  }
                                ]
                              }
                            },
                            "required": [
                              "engagement",
                              "meta"
                            ]
                          }
                        },
                        "required": [
                          "data"
                        ]
                      }
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "fromTweetId",
            "required": false,
            "description": "PostId of the earliest event to include.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "toTweetId",
            "required": false,
            "description": "PostId of the most recent event to include.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "The maximum number of items to return",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          },
          {
            "in": "query",
            "name": "types",
            "required": false,
            "description": "The types of events to return separated by comma. Available values: `NEW_POST`, `NEW_RETWEET`, `NEW_REPLY`. If not specified, it will return records of all event types.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "username",
            "required": true,
            "description": "The username (handle) of the user in x.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Feed & Events"
        ],
        "summary": "Full Feed Info",
        "description": "\n**Description**: Retrieves **a complete list of indexed tweets** from a given specific account feed.\n\n  -  **Tweet metadata** â€“ ID.\n\n\n\nThis endpoint provides full access to an account's historical tweets. You Filter tweets by post IDs range. The endpoint has **limits** â€“ up to **100 tweets in the list per request.**\n\n\n\nâš¡ **Important**: To enable tweet indexing for an account, you must first send a **PUT request** to `/api/v3/accounts/{username}/tracker/tweet/`.\n\n\n\n**Usage**: Use to Retrieve all indexed tweets from an account with engagement stats. Analyze post performance based on likes, retweets, and views. Monitor historical tweet activity for trend analysis. Extract useful tweet info to make better decisions. \n\n\n\n**Usage Cost**: 5 points per request\n    "
      }
    },
    "/api/v3/status/api_key/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isActive": {
                      "type": "boolean",
                      "description": "Indicates whether the API key is active"
                    },
                    "monthPointsLimit": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The monthly points limit for the API key"
                    },
                    "monthPointsUsage": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of points made with the API key in the current month"
                    },
                    "expiresAt": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The expiration unixtimestamp of the API key"
                    }
                  },
                  "required": [
                    "expiresAt",
                    "isActive",
                    "monthPointsLimit",
                    "monthPointsUsage"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Status"
        ],
        "summary": "Api Key Status",
        "description": "\n**Description**: Returns the current status of your API key, including **usage limits, computational points used, activity status, and expiration date**\n\n\n**Usage**: Use to monitor your API keyâ€™s status and limits.\n\n\n**Usage Cost**: free of charge\n    "
      }
    },
    "/api/v3/status/server/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "tags": [
          "Status"
        ],
        "summary": "Server Status",
        "description": "\n**Description**: Returns the current status of API Server.\n\n\n**Usage**: Use to check if the API server is up and running.\n\n\n**Usage Cost**: free of charge\n    "
      }
    },
    "/api/v3/accounts/{username}/tracker/tweet/": {
      "put": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "required": true,
            "description": "The username (handle) of the user in x.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "startDate": {
                    "type": "integer",
                    "format": "int32",
                    "default": null,
                    "description": "If you send this parameter, credits will only be deducted for tweets created after this date",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Feed Indexing"
        ],
        "summary": "Start Indexing",
        "description": "\n**Description**: Initiates the indexing of posts from a account. Once indexing is complete, the posts can be retrieved using GET method with feed & tweets category endpoints.\n\n\n\n**Usage Cost**: 10\n    "
      },
      "delete": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "required": true,
            "description": "The username (handle) of the user in x.com",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Feed Indexing"
        ],
        "summary": "Stop Indexing",
        "description": "\n**Description**: Stops the indexing of posts from an account.\n\n\n\n**Usage Cost**: free of charge\n"
      }
    },
    "/api/v3/accounts/tracker/tweet/": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "createdAt": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The date and time when indexing was initiated",
                            "example": 1742283266
                          },
                          "startDate": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1742265254,
                            "description": "During indexing, only tweets created after this date are downloaded."
                          },
                          "twitterUserId": {
                            "type": "string",
                            "example": "1026753750038470658"
                          }
                        },
                        "required": [
                          "createdAt",
                          "twitterUserId"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Api-Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Feed Indexing"
        ],
        "summary": "Indexing List",
        "description": "\n**Description**: Returns the list of accounts where tweets indexing is active\n\n\n\n**Usage Cost**: free of charge\n"
      }
    }
  },
  "info": {
    "title": "MONI SOCIAL API: FULL ENDPOINTS LIST",
    "version": "v1"
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    },
    "schemas": {
      "Tag": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Alpha Hunter"
          },
          "logoUrl": {
            "type": "string",
            "format": "url"
          }
        },
        "required": [
          "logoUrl",
          "name"
        ]
      },
      "ProjectMindshare": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Internal ID of the account in [x.com](https://x.com/)",
            "example": "1026753750038470658"
          },
          "projectTags": {
            "type": "array",
            "description": "Tags associated with the account, manually assigned by moderators",
            "example": [
              {
                "slug": "other",
                "name": "Other"
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Alpha Hunter"
                },
                "logoUrl": {
                  "type": "string",
                  "format": "url"
                }
              },
              "required": [
                "logoUrl",
                "name"
              ]
            }
          },
          "value": {
            "type": "number",
            "format": "float",
            "example": 50.4,
            "description": "The value in percent. It represents the ratio of smart mentions for this account to the total number of smart mentions."
          },
          "change": {
            "type": "number",
            "format": "float",
            "example": -12.5,
            "description": "Represents the ratio of the current mindshare to the mindshare from the previous identical timeframe."
          }
        },
        "required": [
          "change",
          "projectTags",
          "userId",
          "value"
        ]
      },
      "GetProjectsMindshareResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "description": "Internal ID of the account in [x.com](https://x.com/)",
                  "example": "1026753750038470658"
                },
                "projectTags": {
                  "type": "array",
                  "description": "Tags associated with the account, manually assigned by moderators",
                  "example": [
                    {
                      "slug": "other",
                      "name": "Other"
                    }
                  ],
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Alpha Hunter"
                      },
                      "logoUrl": {
                        "type": "string",
                        "format": "url"
                      }
                    },
                    "required": [
                      "logoUrl",
                      "name"
                    ]
                  }
                },
                "value": {
                  "type": "number",
                  "format": "float",
                  "example": 50.4,
                  "description": "The value in percent. It represents the ratio of smart mentions for this account to the total number of smart mentions."
                },
                "change": {
                  "type": "number",
                  "format": "float",
                  "example": -12.5,
                  "description": "Represents the ratio of the current mindshare to the mindshare from the previous identical timeframe."
                }
              },
              "required": [
                "change",
                "projectTags",
                "userId",
                "value"
              ]
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "TagMindshare": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the category",
            "example": "AI"
          },
          "logoUrl": {
            "type": "string",
            "format": "url",
            "description": "Link to the categoryâ€™s logo",
            "example": "https://storage.googleapis.com/moni-twitter-bot/statics/images/project_tag_logo/ai.png"
          },
          "value": {
            "type": "number",
            "format": "float",
            "example": 50.4,
            "description": "The value in percent. It represents the ratio of smart mentions for this category to the total number of smart mentions."
          },
          "change": {
            "type": "number",
            "format": "float",
            "example": -12.5,
            "description": "Represents the ratio of the current mindshare to the mindshare from the previous identical timeframe."
          }
        },
        "required": [
          "change",
          "logoUrl",
          "name",
          "value"
        ]
      },
      "GetTagMindshareResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the category",
                  "example": "AI"
                },
                "logoUrl": {
                  "type": "string",
                  "format": "url",
                  "description": "Link to the categoryâ€™s logo",
                  "example": "https://storage.googleapis.com/moni-twitter-bot/statics/images/project_tag_logo/ai.png"
                },
                "value": {
                  "type": "number",
                  "format": "float",
                  "example": 50.4,
                  "description": "The value in percent. It represents the ratio of smart mentions for this category to the total number of smart mentions."
                },
                "change": {
                  "type": "number",
                  "format": "float",
                  "example": -12.5,
                  "description": "Represents the ratio of the current mindshare to the mindshare from the previous identical timeframe."
                }
              },
              "required": [
                "change",
                "logoUrl",
                "name",
                "value"
              ]
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "TagInfo": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "example": "ai"
          },
          "name": {
            "type": "string",
            "example": "AI"
          }
        },
        "required": [
          "name",
          "slug"
        ]
      },
      "GetTagsResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "slug": {
                  "type": "string",
                  "example": "ai"
                },
                "name": {
                  "type": "string",
                  "example": "AI"
                }
              },
              "required": [
                "name",
                "slug"
              ]
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "ChainInfo": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "example": "ethereum"
          },
          "name": {
            "type": "string",
            "example": "Ethereum"
          }
        },
        "required": [
          "name",
          "slug"
        ]
      },
      "GetChainsResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "slug": {
                  "type": "string",
                  "example": "ethereum"
                },
                "name": {
                  "type": "string",
                  "example": "Ethereum"
                }
              },
              "required": [
                "name",
                "slug"
              ]
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "SmartTagCategoryInfo": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "example": "influencers"
          },
          "name": {
            "type": "string",
            "example": "Influencers"
          }
        },
        "required": [
          "name",
          "slug"
        ]
      },
      "GetSmartTagCategoriesResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "slug": {
                  "type": "string",
                  "example": "influencers"
                },
                "name": {
                  "type": "string",
                  "example": "Influencers"
                }
              },
              "required": [
                "name",
                "slug"
              ]
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "GetTwitterInfoMetaResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Internal ID of the account in [x.com](https://x.com/)",
            "example": "1026753750038470658"
          },
          "userUrl": {
            "type": "string",
            "description": "URL of the account in [x.com](https://x.com/)",
            "example": "https://x.com/elonmusk"
          }
        },
        "required": [
          "userId",
          "userUrl"
        ]
      },
      "GetTwitterInfoSmartEngagementResponse": {
        "type": "object",
        "properties": {
          "smartsCount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of smarts of the account in [x.com](https://x.com/)",
            "example": 494
          },
          "moniScore": {
            "type": "integer",
            "format": "int32",
            "description": "Account score based on its smarts in [x.com](https://x.com/)",
            "example": 3718
          },
          "mentionsCount": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of mentions of the account in [x.com](https://x.com/)",
            "example": 2779
          },
          "smartMentionsCount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of mentions by \"smart\" accounts in [x.com](https://x.com/)",
            "example": 1761
          }
        },
        "required": [
          "mentionsCount",
          "moniScore",
          "smartMentionsCount",
          "smartsCount"
        ]
      },
      "SmartFollowerTier": {
        "type": "object",
        "properties": {
          "tier": {
            "type": "integer",
            "format": "int32",
            "description": "Tiers range from 1 (highest) to 3 (lowest)",
            "example": 1
          },
          "logoUrl": {
            "type": "string",
            "example": "https://storage.googleapis.com/moni-twitter-bot/statics/images/score_1.png"
          }
        }
      },
      "Tag1": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "example": "alpha-hunter"
          },
          "name": {
            "type": "string",
            "example": "Alpha Hunter"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "example": 3
          }
        },
        "required": [
          "name",
          "slug",
          "totalCount"
        ]
      },
      "Chain": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "example": "ethereum"
          },
          "name": {
            "type": "string",
            "example": "Ethereum"
          }
        },
        "required": [
          "name",
          "slug"
        ]
      },
      "GetTwitterInfoSmartProfileResponse": {
        "type": "object",
        "properties": {
          "smartTier": {
            "description": "Tier of the smarts",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "tier": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Tiers range from 1 (highest) to 3 (lowest)",
                    "example": 1
                  },
                  "logoUrl": {
                    "type": "string",
                    "example": "https://storage.googleapis.com/moni-twitter-bot/statics/images/score_1.png"
                  }
                }
              }
            ]
          },
          "smartTags": {
            "type": "array",
            "description": "List of tags manually assigned by moderators",
            "items": {
              "type": "object",
              "properties": {
                "slug": {
                  "type": "string",
                  "example": "alpha-hunter"
                },
                "name": {
                  "type": "string",
                  "example": "Alpha Hunter"
                },
                "totalCount": {
                  "type": "integer",
                  "format": "int32",
                  "example": 3
                }
              },
              "required": [
                "name",
                "slug",
                "totalCount"
              ]
            }
          },
          "smartTagCategories": {
            "type": "array",
            "description": "List of tag categories manually assigned by moderators",
            "example": [
              {
                "slug": "vc/fund-team",
                "name": "VC/Fund team"
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "slug": {
                  "type": "string",
                  "example": "alpha-hunter"
                },
                "name": {
                  "type": "string",
                  "example": "Alpha Hunter"
                },
                "totalCount": {
                  "type": "integer",
                  "format": "int32",
                  "example": 3
                }
              },
              "required": [
                "name",
                "slug",
                "totalCount"
              ]
            }
          },
          "projectTags": {
            "type": "array",
            "description": "Tags associated with the account, manually assigned by moderators",
            "example": [
              {
                "slug": "other",
                "name": "Other"
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "slug": {
                  "type": "string",
                  "example": "alpha-hunter"
                },
                "name": {
                  "type": "string",
                  "example": "Alpha Hunter"
                },
                "totalCount": {
                  "type": "integer",
                  "format": "int32",
                  "example": 3
                }
              },
              "required": [
                "name",
                "slug",
                "totalCount"
              ]
            }
          },
          "chains": {
            "type": "array",
            "description": "Blockchain networks the account is associated with",
            "items": {
              "type": "object",
              "properties": {
                "slug": {
                  "type": "string",
                  "example": "ethereum"
                },
                "name": {
                  "type": "string",
                  "example": "Ethereum"
                }
              },
              "required": [
                "name",
                "slug"
              ]
            }
          },
          "bioChangesCount": {
            "type": "integer",
            "format": "int32",
            "description": "Indicates the number of times the user's bio has been changed."
          }
        },
        "required": [
          "bioChangesCount"
        ]
      },
      "GetTwitterInfoFullResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "description": "Internal ID of the account in [x.com](https://x.com/)",
                "example": "1026753750038470658"
              },
              "userUrl": {
                "type": "string",
                "description": "URL of the account in [x.com](https://x.com/)",
                "example": "https://x.com/elonmusk"
              }
            },
            "required": [
              "userId",
              "userUrl"
            ]
          },
          "smartEngagement": {
            "type": "object",
            "properties": {
              "smartsCount": {
                "type": "integer",
                "format": "int32",
                "description": "Number of smarts of the account in [x.com](https://x.com/)",
                "example": 494
              },
              "moniScore": {
                "type": "integer",
                "format": "int32",
                "description": "Account score based on its smarts in [x.com](https://x.com/)",
                "example": 3718
              },
              "mentionsCount": {
                "type": "integer",
                "format": "int32",
                "description": "Total number of mentions of the account in [x.com](https://x.com/)",
                "example": 2779
              },
              "smartMentionsCount": {
                "type": "integer",
                "format": "int32",
                "description": "Number of mentions by \"smart\" accounts in [x.com](https://x.com/)",
                "example": 1761
              }
            },
            "required": [
              "mentionsCount",
              "moniScore",
              "smartMentionsCount",
              "smartsCount"
            ]
          },
          "smartProfile": {
            "type": "object",
            "properties": {
              "smartTier": {
                "description": "Tier of the smarts",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "tier": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Tiers range from 1 (highest) to 3 (lowest)",
                        "example": 1
                      },
                      "logoUrl": {
                        "type": "string",
                        "example": "https://storage.googleapis.com/moni-twitter-bot/statics/images/score_1.png"
                      }
                    }
                  }
                ]
              },
              "smartTags": {
                "type": "array",
                "description": "List of tags manually assigned by moderators",
                "items": {
                  "type": "object",
                  "properties": {
                    "slug": {
                      "type": "string",
                      "example": "alpha-hunter"
                    },
                    "name": {
                      "type": "string",
                      "example": "Alpha Hunter"
                    },
                    "totalCount": {
                      "type": "integer",
                      "format": "int32",
                      "example": 3
                    }
                  },
                  "required": [
                    "name",
                    "slug",
                    "totalCount"
                  ]
                }
              },
              "smartTagCategories": {
                "type": "array",
                "description": "List of tag categories manually assigned by moderators",
                "example": [
                  {
                    "slug": "vc/fund-team",
                    "name": "VC/Fund team"
                  }
                ],
                "items": {
                  "type": "object",
                  "properties": {
                    "slug": {
                      "type": "string",
                      "example": "alpha-hunter"
                    },
                    "name": {
                      "type": "string",
                      "example": "Alpha Hunter"
                    },
                    "totalCount": {
                      "type": "integer",
                      "format": "int32",
                      "example": 3
                    }
                  },
                  "required": [
                    "name",
                    "slug",
                    "totalCount"
                  ]
                }
              },
              "projectTags": {
                "type": "array",
                "description": "Tags associated with the account, manually assigned by moderators",
                "example": [
                  {
                    "slug": "other",
                    "name": "Other"
                  }
                ],
                "items": {
                  "type": "object",
                  "properties": {
                    "slug": {
                      "type": "string",
                      "example": "alpha-hunter"
                    },
                    "name": {
                      "type": "string",
                      "example": "Alpha Hunter"
                    },
                    "totalCount": {
                      "type": "integer",
                      "format": "int32",
                      "example": 3
                    }
                  },
                  "required": [
                    "name",
                    "slug",
                    "totalCount"
                  ]
                }
              },
              "chains": {
                "type": "array",
                "description": "Blockchain networks the account is associated with",
                "items": {
                  "type": "object",
                  "properties": {
                    "slug": {
                      "type": "string",
                      "example": "ethereum"
                    },
                    "name": {
                      "type": "string",
                      "example": "Ethereum"
                    }
                  },
                  "required": [
                    "name",
                    "slug"
                  ]
                }
              },
              "bioChangesCount": {
                "type": "integer",
                "format": "int32",
                "description": "Indicates the number of times the user's bio has been changed."
              }
            },
            "required": [
              "bioChangesCount"
            ]
          }
        },
        "required": [
          "meta",
          "smartEngagement",
          "smartProfile"
        ]
      },
      "GetTwitterInfoMetaItemResponse": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "description": "Internal ID of the account in [x.com](https://x.com/)",
                "example": "1026753750038470658"
              },
              "userUrl": {
                "type": "string",
                "description": "URL of the account in [x.com](https://x.com/)",
                "example": "https://x.com/elonmusk"
              }
            },
            "required": [
              "userId",
              "userUrl"
            ]
          }
        },
        "required": [
          "meta"
        ]
      },
      "GetTwitterInfoSmartProfileItemResponse": {
        "type": "object",
        "properties": {
          "smartProfile": {
            "type": "object",
            "properties": {
              "smartTier": {
                "description": "Tier of the smarts",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "tier": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Tiers range from 1 (highest) to 3 (lowest)",
                        "example": 1
                      },
                      "logoUrl": {
                        "type": "string",
                        "example": "https://storage.googleapis.com/moni-twitter-bot/statics/images/score_1.png"
                      }
                    }
                  }
                ]
              },
              "smartTags": {
                "type": "array",
                "description": "List of tags manually assigned by moderators",
                "items": {
                  "type": "object",
                  "properties": {
                    "slug": {
                      "type": "string",
                      "example": "alpha-hunter"
                    },
                    "name": {
                      "type": "string",
                      "example": "Alpha Hunter"
                    },
                    "totalCount": {
                      "type": "integer",
                      "format": "int32",
                      "example": 3
                    }
                  },
                  "required": [
                    "name",
                    "slug",
                    "totalCount"
                  ]
                }
              },
              "smartTagCategories": {
                "type": "array",
                "description": "List of tag categories manually assigned by moderators",
                "example": [
                  {
                    "slug": "vc/fund-team",
                    "name": "VC/Fund team"
                  }
                ],
                "items": {
                  "type": "object",
                  "properties": {
                    "slug": {
                      "type": "string",
                      "example": "alpha-hunter"
                    },
                    "name": {
                      "type": "string",
                      "example": "Alpha Hunter"
                    },
                    "totalCount": {
                      "type": "integer",
                      "format": "int32",
                      "example": 3
                    }
                  },
                  "required": [
                    "name",
                    "slug",
                    "totalCount"
                  ]
                }
              },
              "projectTags": {
                "type": "array",
                "description": "Tags associated with the account, manually assigned by moderators",
                "example": [
                  {
                    "slug": "other",
                    "name": "Other"
                  }
                ],
                "items": {
                  "type": "object",
                  "properties": {
                    "slug": {
                      "type": "string",
                      "example": "alpha-hunter"
                    },
                    "name": {
                      "type": "string",
                      "example": "Alpha Hunter"
                    },
                    "totalCount": {
                      "type": "integer",
                      "format": "int32",
                      "example": 3
                    }
                  },
                  "required": [
                    "name",
                    "slug",
                    "totalCount"
                  ]
                }
              },
              "chains": {
                "type": "array",
                "description": "Blockchain networks the account is associated with",
                "items": {
                  "type": "object",
                  "properties": {
                    "slug": {
                      "type": "string",
                      "example": "ethereum"
                    },
                    "name": {
                      "type": "string",
                      "example": "Ethereum"
                    }
                  },
                  "required": [
                    "name",
                    "slug"
                  ]
                }
              },
              "bioChangesCount": {
                "type": "integer",
                "format": "int32",
                "description": "Indicates the number of times the user's bio has been changed."
              }
            },
            "required": [
              "bioChangesCount"
            ]
          }
        },
        "required": [
          "smartProfile"
        ]
      },
      "GetTwitterInfoSmartEngagementItemResponse": {
        "type": "object",
        "properties": {
          "smartEngagement": {
            "type": "object",
            "properties": {
              "smartsCount": {
                "type": "integer",
                "format": "int32",
                "description": "Number of smarts of the account in [x.com](https://x.com/)",
                "example": 494
              },
              "moniScore": {
                "type": "integer",
                "format": "int32",
                "description": "Account score based on its smarts in [x.com](https://x.com/)",
                "example": 3718
              },
              "mentionsCount": {
                "type": "integer",
                "format": "int32",
                "description": "Total number of mentions of the account in [x.com](https://x.com/)",
                "example": 2779
              },
              "smartMentionsCount": {
                "type": "integer",
                "format": "int32",
                "description": "Number of mentions by \"smart\" accounts in [x.com](https://x.com/)",
                "example": 1761
              }
            },
            "required": [
              "mentionsCount",
              "moniScore",
              "smartMentionsCount",
              "smartsCount"
            ]
          }
        },
        "required": [
          "smartEngagement"
        ]
      },
      "GetChartResponse": {
        "type": "object",
        "properties": {
          "chart": {
            "type": "array",
            "description": "List of [Timestamp (UNIX) representing the date, Historical value on this date]",
            "example": [
              [
                1594713600,
                9219
              ],
              [
                1594713900,
                9218
              ]
            ],
            "items": {}
          },
          "timeframeChange": {
            "type": "number",
            "format": "float",
            "description": "Change in value over the specified timeframe"
          },
          "sinceFoundChange": {
            "type": "number",
            "format": "float",
            "description": "Change in value since the account was first identified"
          },
          "sinceFound": {
            "type": "number",
            "format": "float",
            "description": "Value at the time the account was first discovered"
          }
        }
      },
      "FollowerMeta": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number",
            "description": "Internal ID of the account on [x.com](http://x.com/)",
            "example": "14379660"
          },
          "userUrl": {
            "type": "string",
            "description": "URL of the account in [x.com](https://x.com/)",
            "example": "https://x.com/elonmusk"
          }
        },
        "required": [
          "userUrl"
        ]
      },
      "FollowerSmartEngagement": {
        "type": "object",
        "properties": {
          "interactedAt": {
            "type": "integer",
            "format": "int32",
            "description": "Date and time the smart was added",
            "example": 1708135452
          },
          "moniScore": {
            "type": "integer",
            "format": "int32",
            "description": "Account score based on its smarts in [x.com](https://x.com/)",
            "example": 25147
          },
          "mentionsCount": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of mentions of the account on [x.com](http://x.com/)",
            "example": 6313
          },
          "smartMentionsCount": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of mentions from \"smart\" accounts on [x.com](http://x.com/)",
            "example": 4744
          },
          "smartsCount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of smarts of the account on [x.com](http://x.com/)",
            "example": 2396
          }
        },
        "required": [
          "mentionsCount",
          "moniScore",
          "smartMentionsCount",
          "smartsCount"
        ]
      },
      "SmartFollowerTier1": {
        "type": "object",
        "properties": {
          "tier": {
            "type": "integer",
            "format": "int32",
            "description": "Tiers range from 1 (highest) to 3 (lowest)",
            "example": 1
          },
          "logoUrl": {
            "type": "string",
            "example": "https://storage.googleapis.com/moni-twitter-bot/statics/images/score_1.png"
          }
        }
      },
      "Tag2": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "example": "influencer"
          },
          "name": {
            "type": "string",
            "example": "Influencer"
          }
        },
        "required": [
          "name",
          "slug"
        ]
      },
      "Chain1": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "example": "ethereum"
          },
          "name": {
            "type": "string",
            "example": "Ethereum"
          }
        },
        "required": [
          "name",
          "slug"
        ]
      },
      "FollowerSmartProfile": {
        "type": "object",
        "properties": {
          "smartTier": {
            "description": "Tier of the smart",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "tier": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Tiers range from 1 (highest) to 3 (lowest)",
                    "example": 1
                  },
                  "logoUrl": {
                    "type": "string",
                    "example": "https://storage.googleapis.com/moni-twitter-bot/statics/images/score_1.png"
                  }
                }
              }
            ]
          },
          "smartTags": {
            "type": "array",
            "description": "List of tags manually assigned by moderators",
            "items": {
              "type": "object",
              "properties": {
                "slug": {
                  "type": "string",
                  "example": "influencer"
                },
                "name": {
                  "type": "string",
                  "example": "Influencer"
                }
              },
              "required": [
                "name",
                "slug"
              ]
            }
          },
          "smartTagCategories": {
            "type": "array",
            "description": "List of tag categories manually assigned by moderators",
            "example": [
              {
                "slug": "vc/fund-team",
                "name": "VC/Fund team"
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "slug": {
                  "type": "string",
                  "example": "influencer"
                },
                "name": {
                  "type": "string",
                  "example": "Influencer"
                }
              },
              "required": [
                "name",
                "slug"
              ]
            }
          },
          "projectTags": {
            "type": "array",
            "description": "Tags associated with the account, manually assigned by moderators",
            "example": [
              {
                "slug": "other",
                "name": "Other"
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "slug": {
                  "type": "string",
                  "example": "influencer"
                },
                "name": {
                  "type": "string",
                  "example": "Influencer"
                }
              },
              "required": [
                "name",
                "slug"
              ]
            }
          },
          "chains": {
            "type": "array",
            "description": "Blockchain networks the account is associated with",
            "items": {
              "type": "object",
              "properties": {
                "slug": {
                  "type": "string",
                  "example": "ethereum"
                },
                "name": {
                  "type": "string",
                  "example": "Ethereum"
                }
              },
              "required": [
                "name",
                "slug"
              ]
            }
          },
          "bioChangesCount": {
            "type": "integer",
            "format": "int32",
            "description": "Indicates the number of times the user's bio has been changed."
          }
        },
        "required": [
          "bioChangesCount"
        ]
      },
      "FollowerFullItem": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "number",
                "description": "Internal ID of the account on [x.com](http://x.com/)",
                "example": "14379660"
              },
              "userUrl": {
                "type": "string",
                "description": "URL of the account in [x.com](https://x.com/)",
                "example": "https://x.com/elonmusk"
              }
            },
            "required": [
              "userUrl"
            ]
          },
          "smartEngagement": {
            "type": "object",
            "properties": {
              "interactedAt": {
                "type": "integer",
                "format": "int32",
                "description": "Date and time the smart was added",
                "example": 1708135452
              },
              "moniScore": {
                "type": "integer",
                "format": "int32",
                "description": "Account score based on its smarts in [x.com](https://x.com/)",
                "example": 25147
              },
              "mentionsCount": {
                "type": "integer",
                "format": "int32",
                "description": "Total number of mentions of the account on [x.com](http://x.com/)",
                "example": 6313
              },
              "smartMentionsCount": {
                "type": "integer",
                "format": "int32",
                "description": "Total number of mentions from \"smart\" accounts on [x.com](http://x.com/)",
                "example": 4744
              },
              "smartsCount": {
                "type": "integer",
                "format": "int32",
                "description": "Number of smarts of the account on [x.com](http://x.com/)",
                "example": 2396
              }
            },
            "required": [
              "mentionsCount",
              "moniScore",
              "smartMentionsCount",
              "smartsCount"
            ]
          },
          "smartProfile": {
            "type": "object",
            "properties": {
              "smartTier": {
                "description": "Tier of the smart",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "tier": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Tiers range from 1 (highest) to 3 (lowest)",
                        "example": 1
                      },
                      "logoUrl": {
                        "type": "string",
                        "example": "https://storage.googleapis.com/moni-twitter-bot/statics/images/score_1.png"
                      }
                    }
                  }
                ]
              },
              "smartTags": {
                "type": "array",
                "description": "List of tags manually assigned by moderators",
                "items": {
                  "type": "object",
                  "properties": {
                    "slug": {
                      "type": "string",
                      "example": "influencer"
                    },
                    "name": {
                      "type": "string",
                      "example": "Influencer"
                    }
                  },
                  "required": [
                    "name",
                    "slug"
                  ]
                }
              },
              "smartTagCategories": {
                "type": "array",
                "description": "List of tag categories manually assigned by moderators",
                "example": [
                  {
                    "slug": "vc/fund-team",
                    "name": "VC/Fund team"
                  }
                ],
                "items": {
                  "type": "object",
                  "properties": {
                    "slug": {
                      "type": "string",
                      "example": "influencer"
                    },
                    "name": {
                      "type": "string",
                      "example": "Influencer"
                    }
                  },
                  "required": [
                    "name",
                    "slug"
                  ]
                }
              },
              "projectTags": {
                "type": "array",
                "description": "Tags associated with the account, manually assigned by moderators",
                "example": [
                  {
                    "slug": "other",
                    "name": "Other"
                  }
                ],
                "items": {
                  "type": "object",
                  "properties": {
                    "slug": {
                      "type": "string",
                      "example": "influencer"
                    },
                    "name": {
                      "type": "string",
                      "example": "Influencer"
                    }
                  },
                  "required": [
                    "name",
                    "slug"
                  ]
                }
              },
              "chains": {
                "type": "array",
                "description": "Blockchain networks the account is associated with",
                "items": {
                  "type": "object",
                  "properties": {
                    "slug": {
                      "type": "string",
                      "example": "ethereum"
                    },
                    "name": {
                      "type": "string",
                      "example": "Ethereum"
                    }
                  },
                  "required": [
                    "name",
                    "slug"
                  ]
                }
              },
              "bioChangesCount": {
                "type": "integer",
                "format": "int32",
                "description": "Indicates the number of times the user's bio has been changed."
              }
            },
            "required": [
              "bioChangesCount"
            ]
          }
        },
        "required": [
          "meta",
          "smartEngagement",
          "smartProfile"
        ]
      },
      "GetFollowersFullResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "The list of Smarts",
            "items": {
              "type": "object",
              "properties": {
                "meta": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "number",
                      "description": "Internal ID of the account on [x.com](http://x.com/)",
                      "example": "14379660"
                    },
                    "userUrl": {
                      "type": "string",
                      "description": "URL of the account in [x.com](https://x.com/)",
                      "example": "https://x.com/elonmusk"
                    }
                  },
                  "required": [
                    "userUrl"
                  ]
                },
                "smartEngagement": {
                  "type": "object",
                  "properties": {
                    "interactedAt": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Date and time the smart was added",
                      "example": 1708135452
                    },
                    "moniScore": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Account score based on its smarts in [x.com](https://x.com/)",
                      "example": 25147
                    },
                    "mentionsCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total number of mentions of the account on [x.com](http://x.com/)",
                      "example": 6313
                    },
                    "smartMentionsCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total number of mentions from \"smart\" accounts on [x.com](http://x.com/)",
                      "example": 4744
                    },
                    "smartsCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of smarts of the account on [x.com](http://x.com/)",
                      "example": 2396
                    }
                  },
                  "required": [
                    "mentionsCount",
                    "moniScore",
                    "smartMentionsCount",
                    "smartsCount"
                  ]
                },
                "smartProfile": {
                  "type": "object",
                  "properties": {
                    "smartTier": {
                      "description": "Tier of the smart",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "tier": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Tiers range from 1 (highest) to 3 (lowest)",
                              "example": 1
                            },
                            "logoUrl": {
                              "type": "string",
                              "example": "https://storage.googleapis.com/moni-twitter-bot/statics/images/score_1.png"
                            }
                          }
                        }
                      ]
                    },
                    "smartTags": {
                      "type": "array",
                      "description": "List of tags manually assigned by moderators",
                      "items": {
                        "type": "object",
                        "properties": {
                          "slug": {
                            "type": "string",
                            "example": "influencer"
                          },
                          "name": {
                            "type": "string",
                            "example": "Influencer"
                          }
                        },
                        "required": [
                          "name",
                          "slug"
                        ]
                      }
                    },
                    "smartTagCategories": {
                      "type": "array",
                      "description": "List of tag categories manually assigned by moderators",
                      "example": [
                        {
                          "slug": "vc/fund-team",
                          "name": "VC/Fund team"
                        }
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "slug": {
                            "type": "string",
                            "example": "influencer"
                          },
                          "name": {
                            "type": "string",
                            "example": "Influencer"
                          }
                        },
                        "required": [
                          "name",
                          "slug"
                        ]
                      }
                    },
                    "projectTags": {
                      "type": "array",
                      "description": "Tags associated with the account, manually assigned by moderators",
                      "example": [
                        {
                          "slug": "other",
                          "name": "Other"
                        }
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "slug": {
                            "type": "string",
                            "example": "influencer"
                          },
                          "name": {
                            "type": "string",
                            "example": "Influencer"
                          }
                        },
                        "required": [
                          "name",
                          "slug"
                        ]
                      }
                    },
                    "chains": {
                      "type": "array",
                      "description": "Blockchain networks the account is associated with",
                      "items": {
                        "type": "object",
                        "properties": {
                          "slug": {
                            "type": "string",
                            "example": "ethereum"
                          },
                          "name": {
                            "type": "string",
                            "example": "Ethereum"
                          }
                        },
                        "required": [
                          "name",
                          "slug"
                        ]
                      }
                    },
                    "bioChangesCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Indicates the number of times the user's bio has been changed."
                    }
                  },
                  "required": [
                    "bioChangesCount"
                  ]
                }
              },
              "required": [
                "meta",
                "smartEngagement",
                "smartProfile"
              ]
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of Smarts"
          }
        },
        "required": [
          "items",
          "totalCount"
        ]
      },
      "FollowerMetaItem": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "number",
                "description": "Internal ID of the account on [x.com](http://x.com/)",
                "example": "14379660"
              },
              "userUrl": {
                "type": "string",
                "description": "URL of the account in [x.com](https://x.com/)",
                "example": "https://x.com/elonmusk"
              }
            },
            "required": [
              "userUrl"
            ]
          }
        },
        "required": [
          "meta"
        ]
      },
      "GetFollowersMetaResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "The list of Smarts",
            "items": {
              "type": "object",
              "properties": {
                "meta": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "number",
                      "description": "Internal ID of the account on [x.com](http://x.com/)",
                      "example": "14379660"
                    },
                    "userUrl": {
                      "type": "string",
                      "description": "URL of the account in [x.com](https://x.com/)",
                      "example": "https://x.com/elonmusk"
                    }
                  },
                  "required": [
                    "userUrl"
                  ]
                }
              },
              "required": [
                "meta"
              ]
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of Smarts"
          }
        },
        "required": [
          "items",
          "totalCount"
        ]
      },
      "FollowerSmartProfileItem": {
        "type": "object",
        "properties": {
          "smartProfile": {
            "type": "object",
            "properties": {
              "smartTier": {
                "description": "Tier of the smart",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "tier": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Tiers range from 1 (highest) to 3 (lowest)",
                        "example": 1
                      },
                      "logoUrl": {
                        "type": "string",
                        "example": "https://storage.googleapis.com/moni-twitter-bot/statics/images/score_1.png"
                      }
                    }
                  }
                ]
              },
              "smartTags": {
                "type": "array",
                "description": "List of tags manually assigned by moderators",
                "items": {
                  "type": "object",
                  "properties": {
                    "slug": {
                      "type": "string",
                      "example": "influencer"
                    },
                    "name": {
                      "type": "string",
                      "example": "Influencer"
                    }
                  },
                  "required": [
                    "name",
                    "slug"
                  ]
                }
              },
              "smartTagCategories": {
                "type": "array",
                "description": "List of tag categories manually assigned by moderators",
                "example": [
                  {
                    "slug": "vc/fund-team",
                    "name": "VC/Fund team"
                  }
                ],
                "items": {
                  "type": "object",
                  "properties": {
                    "slug": {
                      "type": "string",
                      "example": "influencer"
                    },
                    "name": {
                      "type": "string",
                      "example": "Influencer"
                    }
                  },
                  "required": [
                    "name",
                    "slug"
                  ]
                }
              },
              "projectTags": {
                "type": "array",
                "description": "Tags associated with the account, manually assigned by moderators",
                "example": [
                  {
                    "slug": "other",
                    "name": "Other"
                  }
                ],
                "items": {
                  "type": "object",
                  "properties": {
                    "slug": {
                      "type": "string",
                      "example": "influencer"
                    },
                    "name": {
                      "type": "string",
                      "example": "Influencer"
                    }
                  },
                  "required": [
                    "name",
                    "slug"
                  ]
                }
              },
              "chains": {
                "type": "array",
                "description": "Blockchain networks the account is associated with",
                "items": {
                  "type": "object",
                  "properties": {
                    "slug": {
                      "type": "string",
                      "example": "ethereum"
                    },
                    "name": {
                      "type": "string",
                      "example": "Ethereum"
                    }
                  },
                  "required": [
                    "name",
                    "slug"
                  ]
                }
              },
              "bioChangesCount": {
                "type": "integer",
                "format": "int32",
                "description": "Indicates the number of times the user's bio has been changed."
              }
            },
            "required": [
              "bioChangesCount"
            ]
          }
        },
        "required": [
          "smartProfile"
        ]
      },
      "GetFollowersSmartProfileResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "The list of Smarts",
            "items": {
              "type": "object",
              "properties": {
                "smartProfile": {
                  "type": "object",
                  "properties": {
                    "smartTier": {
                      "description": "Tier of the smart",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "tier": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Tiers range from 1 (highest) to 3 (lowest)",
                              "example": 1
                            },
                            "logoUrl": {
                              "type": "string",
                              "example": "https://storage.googleapis.com/moni-twitter-bot/statics/images/score_1.png"
                            }
                          }
                        }
                      ]
                    },
                    "smartTags": {
                      "type": "array",
                      "description": "List of tags manually assigned by moderators",
                      "items": {
                        "type": "object",
                        "properties": {
                          "slug": {
                            "type": "string",
                            "example": "influencer"
                          },
                          "name": {
                            "type": "string",
                            "example": "Influencer"
                          }
                        },
                        "required": [
                          "name",
                          "slug"
                        ]
                      }
                    },
                    "smartTagCategories": {
                      "type": "array",
                      "description": "List of tag categories manually assigned by moderators",
                      "example": [
                        {
                          "slug": "vc/fund-team",
                          "name": "VC/Fund team"
                        }
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "slug": {
                            "type": "string",
                            "example": "influencer"
                          },
                          "name": {
                            "type": "string",
                            "example": "Influencer"
                          }
                        },
                        "required": [
                          "name",
                          "slug"
                        ]
                      }
                    },
                    "projectTags": {
                      "type": "array",
                      "description": "Tags associated with the account, manually assigned by moderators",
                      "example": [
                        {
                          "slug": "other",
                          "name": "Other"
                        }
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "slug": {
                            "type": "string",
                            "example": "influencer"
                          },
                          "name": {
                            "type": "string",
                            "example": "Influencer"
                          }
                        },
                        "required": [
                          "name",
                          "slug"
                        ]
                      }
                    },
                    "chains": {
                      "type": "array",
                      "description": "Blockchain networks the account is associated with",
                      "items": {
                        "type": "object",
                        "properties": {
                          "slug": {
                            "type": "string",
                            "example": "ethereum"
                          },
                          "name": {
                            "type": "string",
                            "example": "Ethereum"
                          }
                        },
                        "required": [
                          "name",
                          "slug"
                        ]
                      }
                    },
                    "bioChangesCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Indicates the number of times the user's bio has been changed."
                    }
                  },
                  "required": [
                    "bioChangesCount"
                  ]
                }
              },
              "required": [
                "smartProfile"
              ]
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of Smarts"
          }
        },
        "required": [
          "items",
          "totalCount"
        ]
      },
      "FollowerSmartEngagementItem": {
        "type": "object",
        "properties": {
          "smartEngagement": {
            "type": "object",
            "properties": {
              "interactedAt": {
                "type": "integer",
                "format": "int32",
                "description": "Date and time the smart was added",
                "example": 1708135452
              },
              "moniScore": {
                "type": "integer",
                "format": "int32",
                "description": "Account score based on its smarts in [x.com](https://x.com/)",
                "example": 25147
              },
              "mentionsCount": {
                "type": "integer",
                "format": "int32",
                "description": "Total number of mentions of the account on [x.com](http://x.com/)",
                "example": 6313
              },
              "smartMentionsCount": {
                "type": "integer",
                "format": "int32",
                "description": "Total number of mentions from \"smart\" accounts on [x.com](http://x.com/)",
                "example": 4744
              },
              "smartsCount": {
                "type": "integer",
                "format": "int32",
                "description": "Number of smarts of the account on [x.com](http://x.com/)",
                "example": 2396
              }
            },
            "required": [
              "mentionsCount",
              "moniScore",
              "smartMentionsCount",
              "smartsCount"
            ]
          }
        },
        "required": [
          "smartEngagement"
        ]
      },
      "GetFollowersSmartEngagementResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "The list of Smarts",
            "items": {
              "type": "object",
              "properties": {
                "smartEngagement": {
                  "type": "object",
                  "properties": {
                    "interactedAt": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Date and time the smart was added",
                      "example": 1708135452
                    },
                    "moniScore": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Account score based on its smarts in [x.com](https://x.com/)",
                      "example": 25147
                    },
                    "mentionsCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total number of mentions of the account on [x.com](http://x.com/)",
                      "example": 6313
                    },
                    "smartMentionsCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total number of mentions from \"smart\" accounts on [x.com](http://x.com/)",
                      "example": 4744
                    },
                    "smartsCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of smarts of the account on [x.com](http://x.com/)",
                      "example": 2396
                    }
                  },
                  "required": [
                    "mentionsCount",
                    "moniScore",
                    "smartMentionsCount",
                    "smartsCount"
                  ]
                }
              },
              "required": [
                "smartEngagement"
              ]
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of Smarts"
          }
        },
        "required": [
          "items",
          "totalCount"
        ]
      },
      "LevelDistributionResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "itemsCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetSmartFollowersLevelDistributionResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "The list of Smart Followers levels",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "level": {
                  "type": "integer",
                  "format": "int32"
                },
                "itemsCount": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "FollowersCategory": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "description": "Slug of the category"
          },
          "name": {
            "type": "string",
            "description": "Name of the category"
          },
          "itemsCount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of smarts in this category"
          }
        },
        "required": [
          "itemsCount",
          "name",
          "slug"
        ]
      },
      "GetFollowersCategoriesResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "The list of Smarts categories",
            "items": {
              "type": "object",
              "properties": {
                "slug": {
                  "type": "string",
                  "description": "Slug of the category"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the category"
                },
                "itemsCount": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of smarts in this category"
                }
              },
              "required": [
                "itemsCount",
                "name",
                "slug"
              ]
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of Smarts categories"
          }
        },
        "required": [
          "items",
          "totalCount"
        ]
      },
      "TimelineHeap": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "integer",
            "format": "int32",
            "description": "The date the event was created",
            "example": 1737729427
          },
          "type": {
            "type": "string",
            "enum": [
              "NEW_BIO",
              "NEW_FOLLOWING",
              "NEW_FOLLOWING_BY_SMART",
              "NEW_UNFOLLOWING_BY_SMART",
              "NEW_MAJOR_EVENT"
            ]
          },
          "data": {}
        },
        "required": [
          "createdAt",
          "data",
          "type"
        ]
      },
      "GetTimelineHeapResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "example": [
              {
                "createdAt": 1742128258,
                "type": "NEW_BIO",
                "data": {}
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "createdAt": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The date the event was created",
                  "example": 1737729427
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "NEW_BIO",
                    "NEW_FOLLOWING",
                    "NEW_FOLLOWING_BY_SMART",
                    "NEW_UNFOLLOWING_BY_SMART",
                    "NEW_MAJOR_EVENT"
                  ]
                },
                "data": {}
              },
              "required": [
                "createdAt",
                "data",
                "type"
              ]
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "Tag3": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "example": "influencer"
          },
          "name": {
            "type": "string",
            "example": "Influencer"
          }
        },
        "required": [
          "name",
          "slug"
        ]
      },
      "MentionBySmart": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "userUrl": {
            "type": "string"
          },
          "moniScore": {
            "type": "integer",
            "format": "int32"
          },
          "smartsCount": {
            "type": "integer",
            "format": "int32"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "slug": {
                  "type": "string",
                  "example": "influencer"
                },
                "name": {
                  "type": "string",
                  "example": "Influencer"
                }
              },
              "required": [
                "name",
                "slug"
              ]
            }
          }
        },
        "required": [
          "userId",
          "userUrl"
        ]
      },
      "NewMentionTimeline": {
        "type": "object",
        "properties": {
          "mentionBy": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string"
              },
              "userUrl": {
                "type": "string"
              },
              "moniScore": {
                "type": "integer",
                "format": "int32"
              },
              "smartsCount": {
                "type": "integer",
                "format": "int32"
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "slug": {
                      "type": "string",
                      "example": "influencer"
                    },
                    "name": {
                      "type": "string",
                      "example": "Influencer"
                    }
                  },
                  "required": [
                    "name",
                    "slug"
                  ]
                }
              }
            },
            "required": [
              "userId",
              "userUrl"
            ]
          },
          "postUrl": {
            "type": "string",
            "example": "https://x.com/elonmusk/status/1900638690252136809"
          },
          "postId": {
            "type": "string",
            "example": "1900638690252136809"
          }
        },
        "required": [
          "mentionBy",
          "postId",
          "postUrl"
        ]
      },
      "TimelineSmartMentions": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "integer",
            "format": "int32",
            "description": "The date the event was created",
            "example": 1737729427
          },
          "type": {
            "type": "string",
            "enum": [
              "NEW_MENTION"
            ],
            "example": "NEW_MENTION"
          },
          "data": {
            "type": "object",
            "properties": {
              "mentionBy": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "userUrl": {
                    "type": "string"
                  },
                  "moniScore": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "smartsCount": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "slug": {
                          "type": "string",
                          "example": "influencer"
                        },
                        "name": {
                          "type": "string",
                          "example": "Influencer"
                        }
                      },
                      "required": [
                        "name",
                        "slug"
                      ]
                    }
                  }
                },
                "required": [
                  "userId",
                  "userUrl"
                ]
              },
              "postUrl": {
                "type": "string",
                "example": "https://x.com/elonmusk/status/1900638690252136809"
              },
              "postId": {
                "type": "string",
                "example": "1900638690252136809"
              }
            },
            "required": [
              "mentionBy",
              "postId",
              "postUrl"
            ]
          }
        },
        "required": [
          "createdAt",
          "data",
          "type"
        ]
      },
      "GetTimelineSmartMentionsResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "createdAt": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The date the event was created",
                  "example": 1737729427
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "NEW_MENTION"
                  ],
                  "example": "NEW_MENTION"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "mentionBy": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "string"
                        },
                        "userUrl": {
                          "type": "string"
                        },
                        "moniScore": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "smartsCount": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "slug": {
                                "type": "string",
                                "example": "influencer"
                              },
                              "name": {
                                "type": "string",
                                "example": "Influencer"
                              }
                            },
                            "required": [
                              "name",
                              "slug"
                            ]
                          }
                        }
                      },
                      "required": [
                        "userId",
                        "userUrl"
                      ]
                    },
                    "postUrl": {
                      "type": "string",
                      "example": "https://x.com/elonmusk/status/1900638690252136809"
                    },
                    "postId": {
                      "type": "string",
                      "example": "1900638690252136809"
                    }
                  },
                  "required": [
                    "mentionBy",
                    "postId",
                    "postUrl"
                  ]
                }
              },
              "required": [
                "createdAt",
                "data",
                "type"
              ]
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "TweetEngagement": {
        "type": "object",
        "properties": {
          "postScore": {
            "type": "number",
            "format": "float",
            "description": "The post score",
            "example": 91.6
          }
        },
        "required": [
          "postScore"
        ]
      },
      "TweetMeta": {
        "type": "object",
        "properties": {
          "postId": {
            "type": "number",
            "description": "Indicates the unique identifier of the tweet",
            "example": "1901917025385005306"
          }
        },
        "required": [
          "postId"
        ]
      },
      "TweetFullItem": {
        "type": "object",
        "properties": {
          "engagement": {
            "description": "The tweet engagement",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "postScore": {
                    "type": "number",
                    "format": "float",
                    "description": "The post score",
                    "example": 91.6
                  }
                },
                "required": [
                  "postScore"
                ]
              }
            ]
          },
          "meta": {
            "description": "The tweet meta",
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "postId": {
                    "type": "number",
                    "description": "Indicates the unique identifier of the tweet",
                    "example": "1901917025385005306"
                  }
                },
                "required": [
                  "postId"
                ]
              }
            ]
          }
        },
        "required": [
          "engagement",
          "meta"
        ]
      },
      "TimelineTweetsFull": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "engagement": {
                "description": "The tweet engagement",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "postScore": {
                        "type": "number",
                        "format": "float",
                        "description": "The post score",
                        "example": 91.6
                      }
                    },
                    "required": [
                      "postScore"
                    ]
                  }
                ]
              },
              "meta": {
                "description": "The tweet meta",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "postId": {
                        "type": "number",
                        "description": "Indicates the unique identifier of the tweet",
                        "example": "1901917025385005306"
                      }
                    },
                    "required": [
                      "postId"
                    ]
                  }
                ]
              }
            },
            "required": [
              "engagement",
              "meta"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "GetTimelineTweetsFullResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "engagement": {
                      "description": "The tweet engagement",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "postScore": {
                              "type": "number",
                              "format": "float",
                              "description": "The post score",
                              "example": 91.6
                            }
                          },
                          "required": [
                            "postScore"
                          ]
                        }
                      ]
                    },
                    "meta": {
                      "description": "The tweet meta",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "postId": {
                              "type": "number",
                              "description": "Indicates the unique identifier of the tweet",
                              "example": "1901917025385005306"
                            }
                          },
                          "required": [
                            "postId"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "engagement",
                    "meta"
                  ]
                }
              },
              "required": [
                "data"
              ]
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "ApiKeyStatusResponse": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean",
            "description": "Indicates whether the API key is active"
          },
          "monthPointsLimit": {
            "type": "integer",
            "format": "int32",
            "description": "The monthly points limit for the API key"
          },
          "monthPointsUsage": {
            "type": "integer",
            "format": "int32",
            "description": "The number of points made with the API key in the current month"
          },
          "expiresAt": {
            "type": "integer",
            "format": "int32",
            "description": "The expiration unixtimestamp of the API key"
          }
        },
        "required": [
          "expiresAt",
          "isActive",
          "monthPointsLimit",
          "monthPointsUsage"
        ]
      },
      "ServerStatusResponse": {
        "type": "object",
        "properties": {}
      },
      "AddTweetTrackerRequest": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "integer",
            "format": "int32",
            "default": null,
            "description": "If you send this parameter, credits will only be deducted for tweets created after this date",
            "nullable": true
          }
        }
      },
      "AddTweetsTrackerResponse": {
        "type": "object",
        "properties": {}
      },
      "DeleteTweetsTrackerResponse": {
        "type": "object",
        "properties": {}
      },
      "TweetTracker": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "integer",
            "format": "int32",
            "description": "The date and time when indexing was initiated",
            "example": 1742283266
          },
          "startDate": {
            "type": "integer",
            "format": "int32",
            "example": 1742265254,
            "description": "During indexing, only tweets created after this date are downloaded."
          },
          "twitterUserId": {
            "type": "string",
            "example": "1026753750038470658"
          }
        },
        "required": [
          "createdAt",
          "twitterUserId"
        ]
      },
      "GetTweetTrackerResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "createdAt": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The date and time when indexing was initiated",
                  "example": 1742283266
                },
                "startDate": {
                  "type": "integer",
                  "format": "int32",
                  "example": 1742265254,
                  "description": "During indexing, only tweets created after this date are downloaded."
                },
                "twitterUserId": {
                  "type": "string",
                  "example": "1026753750038470658"
                }
              },
              "required": [
                "createdAt",
                "twitterUserId"
              ]
            }
          }
        }
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true
  }
}